previous_team_batch <- lapply(previous_game_date_teams, function(x){
rosters %>% filter(slugTeam == x) %>% filter(Include == "Y") %>% select(idPlayer,namePlayer)
})
previous_team_batch <- bind_rows(previous_team_batch)
previous_team_batch <- previous_team_batch %>% left_join(playerdata %>% filter(slugSeason == "2024-25") %>% group_by(idPlayer) %>% summarize(n = n()) %>% ungroup(), by = "idPlayer") %>% filter(n >=1)
previous_team_batch <- previous_team_batch %>% pull(namePlayer)
sample <- "Kelly Oubre Jr."
wix_jobs <- write.csv(as.data.frame(players) %>% rename(namePlayer = players) %>% left_join(playerdata %>% filter(slugSeason == "2024-25") %>% group_by(namePlayer,idPlayer,slugTeam) %>% summarize(n = n()), by = "namePlayer") %>% select(namePlayer,idPlayer,slugTeam) %>% left_join(teams, by = "slugTeam") %>% select(namePlayer, idPlayer, nameTeam) %>% mutate(HTML = paste0("{\"nodes\":[{\"type\":\"PARAGRAPH\",\"id\":\"hlkd5116\",\"nodes\":[],\"paragraphData\":{}},{\"type\":\"HTML\",\"id\":\"cps99115\",\"nodes\":[],\"htmlData\":{\"containerData\":{\"textWrap\":true,\"height\":{\"custom\":\"1000\"},\"spoiler\":{},\"alignment\":\"CENTER\",\"width\":{\"custom\":\"1800\"}},\"url\":\"https://raw.githack.com/backironanalytics/my-site-test/main/sheets/",gsub("^(.*?)\\s.*", "\\1",namePlayer),"%20",gsub("^\\S+ ", "",namePlayer),idPlayer,substr(idPlayer,start = 1, stop =3),".html\",\"source\":\"HTML\"}},{\"type\":\"PARAGRAPH\",\"id\":\"zuhhp117\",\"nodes\":[],\"paragraphData\":{}}],\"metadata\":{\"version\":1,\"createdTimestamp\":\"2022-12-19T17:56:18.279Z\",\"updatedTimestamp\":\"2022-12-19T17:56:18.279Z\",\"id\":\"857a69b7-4e6b-4821-973a-064010acd74b\"},\"documentStyle\":{}}")),"jobs_test2.csv")
library(foreach)
foreach(i = next_team_batch$namePlayer, j = next_team_batch$idPlayer) %do% {
rmarkdown::render(input = 'C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/ML_Parlay_TBRv11_2025.Rmd',
output_file = paste0(i,j,substr(j,start = 1, stop =3),".html"),
output_dir = file.path('C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/sheets'),
params = list(player = i))
}
library(foreach)
foreach(i = next_team_batch$namePlayer, j = next_team_batch$idPlayer) %do% {
rmarkdown::render(input = 'C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/ML_Parlay_TBRv11_2025.Rmd',
output_file = paste0(i,j,substr(j,start = 1, stop =3),".html"),
output_dir = file.path('C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/sheets'),
params = list(id = j))
}
library(foreach)
foreach(i = next_team_batch$namePlayer, j = next_team_batch$idPlayer) %do% {
rmarkdown::render(input = 'C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/ML_Parlay_TBRv12_2025.Rmd',
output_file = paste0(i,j,substr(j,start = 1, stop =3),".html"),
output_dir = file.path('C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/sheets'),
params = list(id = j))
}
library(foreach)
foreach(i = next_team_batch$namePlayer, j = next_team_batch$idPlayer) %do% {
rmarkdown::render(input = 'C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/ML_Parlay_TBRv12_2025.Rmd',
output_file = paste0(i,j,substr(j,start = 1, stop =3),".html"),
output_dir = file.path('C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/sheets'),
params = list(id = j))
}
library(foreach)
foreach(i = next_team_batch$namePlayer, j = next_team_batch$idPlayer) %do% {
rmarkdown::render(input = 'C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/ML_Parlay_TBRv12_2025.Rmd',
output_file = paste0(i,j,substr(j,start = 1, stop =3),".html"),
output_dir = file.path('C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/sheets'),
params = list(id = j))
}
next_team_batch$idPlayer
playerdata %>% filter(idPlayer == params$id) %>%
select(dateGame, idGame, slugOpponent, idPlayer, namePlayer, fgm,fga,pts,treb,ast,stl,blk,fg3m,fg3a,tov,ftm,
plusminus,minutes,locationGame, countDaysRestPlayer, isB2B, isB2BFirst, isB2BSecond, slugSeason,typeSeason, urlPlayerHeadshot,outcomeGame,countDaysRestPlayer,nameTeam)
params$id
params:
player: Steph
player_name
playerdata
playerdata %>% filter(idPlayer == 1628404)
playerdata %>% filter(idPlayer == 1628404) %>% select(namePlayer)
gamedata <- game_logs(seasons = 2024, result_types = "team", season_types = c("Regular Season","Playoffs"))
gamedata_current <- game_logs(seasons = 2025, result_types = "team", season_types = c("Regular Season"))
current_season <- "2024-25"
last_season <- "2023-24"
gamedata <- bind_rows(gamedata,gamedata_current)
playerdata <- game_logs(seasons = 2024, result_types = "player", season_types = c("Regular Season","Playoffs"))
playerdata_current <- game_logs(seasons = 2025, result_types = "player", season_types = c("Regular Season"))
playerdata <- bind_rows(playerdata,playerdata_current)
season <- playerdata %>% pull(slugSeason)
player_name <- playerdata %>% filter(idPlayer == params$id) %>%
select(dateGame, idGame, slugOpponent, idPlayer, namePlayer, fgm,fga,pts,treb,ast,stl,blk,fg3m,fg3a,tov,
plusminus,minutes,locationGame, countDaysRestPlayer, isB2B, isB2BFirst, isB2BSecond) %>% pull(namePlayer)
next_team_batch$idPlayer
params:
id: 1628404
library(tidyverse)
library(nbastatR)
library(stringr)
library(caret)
library(ggplot2)
library(ggpubr)
library(knitr)
library(data.table)
library(broom)
library(grid)
library(gridExtra)
library(grDevices)
library(reactablefmtr)
library(formattable)
library(markdown)
library(magick)
library(highcharter)
library(extrafont)
library(cowplot)
library(fmsb)
library(shiny)
library(fontawesome)
library(dplyr)
library(flexdashboard)
library(bslib)
Sys.setenv("VROOM_CONNECTION_SIZE" = 131072 * 2)
gamedata <- game_logs(seasons = 2024, result_types = "team", season_types = c("Regular Season","Playoffs"))
gamedata_current <- game_logs(seasons = 2025, result_types = "team", season_types = c("Regular Season"))
current_season <- "2024-25"
last_season <- "2023-24"
gamedata <- bind_rows(gamedata,gamedata_current)
playerdata <- game_logs(seasons = 2024, result_types = "player", season_types = c("Regular Season","Playoffs"))
playerdata_current <- game_logs(seasons = 2025, result_types = "player", season_types = c("Regular Season"))
playerdata <- bind_rows(playerdata,playerdata_current)
season <- playerdata %>% pull(slugSeason)
player_name <- playerdata %>% filter(idPlayer == params$id) %>%
select(dateGame, idGame, slugOpponent, idPlayer, namePlayer, fgm,fga,pts,treb,ast,stl,blk,fg3m,fg3a,tov,
plusminus,minutes,locationGame, countDaysRestPlayer, isB2B, isB2BFirst, isB2BSecond) %>% pull(namePlayer)
slugteam <- playerdata %>% filter(idPlayer == params$id, slugSeason == current_season) %>% pull(slugTeam)
gameids<- playerdata %>% filter(idPlayer == idPlayer == params$id)%>% group_by(idGame) %>% summarize(n = n()) %>% pull(idGame)
player_name
library(tidyverse)
library(nbastatR)
library(stringr)
library(caret)
library(ggplot2)
library(ggpubr)
library(knitr)
library(data.table)
library(broom)
library(grid)
library(gridExtra)
library(grDevices)
library(reactablefmtr)
library(formattable)
library(markdown)
library(magick)
library(highcharter)
library(extrafont)
library(cowplot)
library(fmsb)
library(shiny)
library(fontawesome)
library(dplyr)
library(flexdashboard)
library(bslib)
Sys.setenv("VROOM_CONNECTION_SIZE" = 131072 * 2)
gamedata <- game_logs(seasons = 2024, result_types = "team", season_types = c("Regular Season","Playoffs"))
gamedata_current <- game_logs(seasons = 2025, result_types = "team", season_types = c("Regular Season"))
current_season <- "2024-25"
last_season <- "2023-24"
gamedata <- bind_rows(gamedata,gamedata_current)
playerdata <- game_logs(seasons = 2024, result_types = "player", season_types = c("Regular Season","Playoffs"))
playerdata_current <- game_logs(seasons = 2025, result_types = "player", season_types = c("Regular Season"))
playerdata <- bind_rows(playerdata,playerdata_current)
season <- playerdata %>% pull(slugSeason)
player_name <- playerdata %>% filter(idPlayer == params$id) %>%
select(dateGame, idGame, slugOpponent, idPlayer, namePlayer, fgm,fga,pts,treb,ast,stl,blk,fg3m,fg3a,tov,
plusminus,minutes,locationGame, countDaysRestPlayer, isB2B, isB2BFirst, isB2BSecond) %>% pull(namePlayer)
slugteam <- playerdata %>% filter(idPlayer == params$id, slugSeason == current_season) %>% pull(slugTeam)
gameids<- playerdata %>% filter(idPlayer == params$id)%>% group_by(idGame) %>% summarize(n = n()) %>% pull(idGame)
player_data <- playerdata %>% filter(idPlayer == params$id) %>%
select(dateGame, idGame, slugOpponent, idPlayer, namePlayer, fgm,fga,pts,treb,ast,stl,blk,fg3m,fg3a,tov,ftm,
plusminus,minutes,locationGame, countDaysRestPlayer, isB2B, isB2BFirst, isB2BSecond, slugSeason,typeSeason, urlPlayerHeadshot,outcomeGame,countDaysRestPlayer,nameTeam)
team_id <- playerdata %>% filter(idPlayer == params$id) %>%
select(dateGame, idGame, slugOpponent, idPlayer, namePlayer, fgm,fga,pts,treb,ast,stl,blk,fg3m,fg3a,tov,
plusminus,minutes,locationGame, countDaysRestPlayer, isB2B, isB2BFirst, isB2BSecond,idTeam) %>% group_by(idTeam) %>% summarize(n = n()) %>% pull(idTeam)
team_id_most_recent <- playerdata %>% filter(idPlayer == params$id) %>%
select(dateGame, idGame, slugOpponent, idPlayer, namePlayer, fgm,fga,pts,treb,ast,stl,blk,fg3m,fg3a,tov,
plusminus,minutes,locationGame, countDaysRestPlayer, isB2B, isB2BFirst, isB2BSecond,idTeam) %>% arrange(desc(dateGame)) %>% head(1) %>% pull(idTeam)
team_colors <- nba_teams(league = "NBA")
team_colors <- team_colors %>% filter(idTeam == team_id_most_recent) %>% select(colorsTeam)
photo <- playerdata %>% filter(idPlayer == params$id) %>% head(1) %>% pull(urlPlayerHeadshot)
conference <- unnest(bref_teams_stats(seasons = 2025))
conference <- gamedata %>% group_by(nameTeam,slugTeam) %>% summarize(n = n()) %>% left_join(conference %>% mutate(nameTeam = ifelse(nameTeam == "Los Angeles Clippers","LA Clippers",nameTeam)) %>% group_by(nameTeam,nameConference) %>% summarize(n = n()), by = "nameTeam")
logos <- nba_teams(league = "NBA")
logos <- logos %>% filter(isNonNBATeam == 0) %>% select(idTeam,slugTeam,urlThumbnailTeam)
split_colors <- str_split_fixed(team_colors$colorsTeam,', ',5)
primary_color <- split_colors[,1]
secondary_color <- split_colors[,2]
third_color <- split_colors[,3]
primary_color <- "#FF204E"
secondary_color <- "#333A73"
league_leaders_reg_season <- metrics_leaders(seasons = 2025,  season_types = "Regular Season", modes = "PerGame", return_message = T, metric = "pts")
#gamedata <- gamedata %>% filter(idTeam == team_id)
most_recent = playerdata %>% filter(idPlayer == params$id) %>%
select(dateGame, idGame, slugOpponent, idPlayer, namePlayer, fgm,fga,pts,treb,ast,stl,blk,fg3m,fg3a,tov,
plusminus,minutes,locationGame, countDaysRestPlayer, isB2B, isB2BFirst, isB2BSecond) %>% slice(which.max(dateGame)) %>% pull(dateGame)
rest = as.integer(Sys.Date() - most_recent - 1)
next_opponent_table <- schedule %>% filter(Team == slugteam[1])
next_opponent <- next_opponent_table %>% filter(Date == schedule %>% filter(next_game == TRUE,Team == slugteam[1]) %>% pull(Date) %>% min) %>% pull(slugTeam)
next_location <- substring(next_opponent_table %>% filter(Date == schedule %>% filter(next_game == TRUE,Team == slugteam[1]) %>% pull(Date) %>% min)  %>% pull(location),1,1)
next_opponent
library(foreach)
foreach(i = next_team_batch$namePlayer, j = next_team_batch$idPlayer) %do% {
rmarkdown::render(input = 'C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/ML_Parlay_TBRv12_2025.Rmd',
output_file = paste0(i,j,substr(j,start = 1, stop =3),".html"),
output_dir = file.path('C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/sheets'),
params = list(id = j))
}
player_name <- playerdata %>% filter(idPlayer == params$id) %>%
select(dateGame, idGame, slugOpponent, idPlayer, namePlayer, fgm,fga,pts,treb,ast,stl,blk,fg3m,fg3a,tov,
plusminus,minutes,locationGame, countDaysRestPlayer, isB2B, isB2BFirst, isB2BSecond) %>% pull(namePlayer)
slug_team <- all_rosters %>% filter(idPlayer == params$id) %>% select(slugTeam)
team_id_current <- all_rosters %>% filter(idPlayer == params$id) %>% pull(idTeam)
team_name <- slug_team %>% left_join(teams, by = "slugTeam") %>% pull(nameTeam)
team_logo <- teams %>% filter(idTeam == team_id_current) %>% pull(urlThumbnailTeam)
roster_data <- all_rosters %>% filter(idPlayer == params$id[1])
player_name
pts_per_attempt <- as.data.frame(playerdata %>% filter(slugSeason == current_season,typeSeason == "Regular Season") %>% group_by(namePlayer,idPlayer,slugTeam) %>% summarize(n = n(), pts = sum(pts), fga = sum(fga), min = sum(minutes))  %>% mutate(points_per_attempt = (pts/fga))) %>% mutate(rank = order(order(points_per_attempt, decreasing = T))) %>% arrange(desc(points_per_attempt))
pts_per_attempt_rank <- pts_per_attempt %>% filter(idPlayer == params$id) %>% pull(rank)
pts_per_attempt_avg <- pts_per_attempt %>% filter(idPlayer == params$id) %>% pull(points_per_attempt)
pts_per_attempt_n <- pts_per_attempt %>% filter(idPlayer == params$id) %>% pull(n)
player_data <- playerdata %>% filter(idPlayer == params$id) %>% select(dateGame, idGame, slugOpponent, idPlayer, namePlayer, fgm,fga,pts,treb,ast,stl,blk,fg3m,fg3a,tov,
plusminus,minutes,locationGame, countDaysRestPlayer, isB2B, isB2BFirst, isB2BSecond, slugSeason,typeSeason,ftm,outcomeGame)
player_data_expanded <- playerdata  %>% select(dateGame, idGame, slugOpponent, idPlayer, namePlayer, fgm,fga,pts,treb,ast,stl,blk,fg3m,fg3a,tov,plusminus,minutes,locationGame, countDaysRestPlayer, isB2B, isB2BFirst, isB2BSecond, slugSeason,typeSeason) %>% group_by(dateGame,locationGame,namePlayer, idPlayer, typeSeason) %>% summarize(n = n())
play_play_player <- play_play %>% filter(idPlayerNBA1 == params$id, !is.na(slugScore))
play_play_player_assists <- play_play %>% filter(idPlayerNBA2 == params$id, str_detect(descriptionPlayHome,"AST") | str_detect(descriptionPlayVisitor,"AST"))
play_play_player_rebounds <- play_play %>% filter(is.na(slugScore),idPlayerNBA1 == params$id, str_detect(descriptionPlayHome,"REBOUND") | str_detect(descriptionPlayVisitor,"REBOUND"))
play_play_player_steals <- play_play %>% filter(idPlayerNBA2 == params$id, str_detect(descriptionPlayHome,"STEAL") | str_detect(descriptionPlayVisitor,"STEAL"))
play_play_player_blocks <- play_play %>% filter(idPlayerNBA3 == params$id, str_detect(descriptionPlayHome,"BLOCK") | str_detect(descriptionPlayVisitor,"BLOCK"))
play_play_all <- play_play %>% filter(!is.na(slugScore))
play_play_all_assists <- play_play %>% filter( str_detect(descriptionPlayHome,"AST") | str_detect(descriptionPlayVisitor,"AST"))
play_play_all_rebounds <- play_play %>% filter(is.na(slugScore), str_detect(descriptionPlayHome,"REBOUND") | str_detect(descriptionPlayVisitor,"REBOUND"))
play_play_all_steals <- play_play %>% filter( str_detect(descriptionPlayHome,"STEAL") | str_detect(descriptionPlayVisitor,"STEAL"))
play_play_all_blocks <- play_play %>% filter(str_detect(descriptionPlayHome,"BLOCK") | str_detect(descriptionPlayVisitor,"BLOCK"))
play_play_makes <- play_play_player %>% select(idGame,numberPeriod, descriptionPlayHome,descriptionPlayNeutral,descriptionPlayVisitor, namePlayer1,slugScore,scoreHome,scoreAway,slugTeamPlayer1) %>% rename(slugTeam = slugTeamPlayer1) %>% mutate(description = ifelse(is.na(descriptionPlayHome),ifelse(is.na(descriptionPlayNeutral),descriptionPlayVisitor,descriptionPlayNeutral),descriptionPlayHome)) %>% mutate(free_throw_flag = str_detect(description,"Free Throw"), three_point_flag = str_detect(description,"3PT")) %>% mutate(two_point_flag = ifelse(free_throw_flag == FALSE & three_point_flag == FALSE, TRUE,FALSE)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason,locationGame,slugTeam,slugSeason) %>% summarize(n = n()), by = c("idGame","slugTeam")) %>% mutate(pts = ifelse(free_throw_flag == TRUE,1,ifelse(two_point_flag== TRUE,2,3)),score_type = ifelse(free_throw_flag == TRUE,"Free Throw",ifelse(two_point_flag== TRUE,"2 pt","3 pt")))
play_play_makes_expanded <- play_play_player %>% select(idGame,numberPeriod, descriptionPlayHome,descriptionPlayNeutral,descriptionPlayVisitor, namePlayer1, idPlayerNBA1, slugScore,scoreHome,scoreAway, slugTeamPlayer1) %>% rename(slugTeam = slugTeamPlayer1) %>% mutate(description = ifelse(is.na(descriptionPlayHome),ifelse(is.na(descriptionPlayNeutral),descriptionPlayVisitor,descriptionPlayNeutral),descriptionPlayHome)) %>% mutate(free_throw_flag = str_detect(description,"Free Throw"), three_point_flag = str_detect(description,"3PT")) %>% mutate(two_point_flag = ifelse(free_throw_flag == FALSE & three_point_flag == FALSE, TRUE,FALSE)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason,locationGame, slugTeam,slugSeason) %>% summarize(n = n()), by = c("idGame","slugTeam")) %>% mutate(pts = ifelse(free_throw_flag == TRUE,1,ifelse(two_point_flag== TRUE,2,3)),score_type = ifelse(free_throw_flag == TRUE,"Free Throw",ifelse(two_point_flag== TRUE,"2 pt","3 pt"))) %>% group_by(dateGame,namePlayer1,idPlayerNBA1) %>% summarize(pts = sum(pts))
firstq_makes <- player_data %>% group_by(dateGame,locationGame,typeSeason,slugOpponent,slugSeason) %>% summarize(n = n()) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(dateGame) %>% summarize(pts = sum(pts)), by = "dateGame") %>% mutate(pts = replace_na(pts,0))
firstq_makes_expanded <- player_data_expanded %>% left_join(play_play_makes_expanded %>% rename(idPlayer = idPlayerNBA1), by = c("dateGame","idPlayer")) %>% mutate(pts = replace_na(pts,0))
play_play_assists <- play_play_player_assists %>% select(idGame,numberPeriod,descriptionPlayHome,descriptionPlayVisitor, namePlayer1,namePlayer2,slugTeamPlayer1) %>% rename(slugTeam = slugTeamPlayer1) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason,locationGame,slugTeam,slugSeason) %>% summarize(n = n()), by = c("idGame","slugTeam"))
firstq_assists <- player_data %>% group_by(dateGame,locationGame,typeSeason,slugOpponent,slugSeason) %>% summarize(n = n()) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(dateGame,typeSeason,locationGame) %>% summarize(assists = n()), by = "dateGame") %>% mutate(assists = replace_na(assists,0)) %>% rename(locationGame = locationGame.x, typeSeason = typeSeason.x)
play_play_rebounds <- play_play_player_rebounds %>% select(idGame,numberPeriod,descriptionPlayHome,descriptionPlayVisitor, namePlayer1,slugTeamPlayer1) %>% rename(slugTeam = slugTeamPlayer1) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason,locationGame,slugTeam,slugSeason) %>% summarize(n = n()), by = c("idGame","slugTeam"))
firstq_rebounds <- player_data %>% group_by(dateGame,locationGame,typeSeason,slugOpponent,slugSeason) %>% summarize(n = n()) %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(dateGame,typeSeason,locationGame) %>% summarize(rebounds = n()), by = "dateGame") %>% mutate(rebounds = replace_na(rebounds,0)) %>% rename(locationGame = locationGame.x, typeSeason = typeSeason.x)
#season <- player_data %>% filter(typeSeason == "Regular Season") %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_fg3a = sum(fg3a), total_minutes = sum(minutes), total_tov = sum(tov)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1)) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,fg_percentage,fg3_percentage,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
season <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason,slugSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason,slugSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% filter(typeSeason == "Regular Season",slugSeason == current_season) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(season)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(season))*0)), nrow = 1, ncol=ncol(season)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
season_frame <- if(nrow(season)==0){error}else{season}
season_last <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason,slugSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason,slugSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% filter(typeSeason == "Regular Season",slugSeason == last_season) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(season_last)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(season))*0)), nrow = 1, ncol=ncol(season_last)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
season_last_frame <- if(nrow(season_last)==0){error}else{season_last}
b2b <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% filter(typeSeason == "Regular Season", isB2BSecond == TRUE,slugSeason == current_season) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(b2b)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(b2b))*0)), nrow = 1, ncol=ncol(b2b)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
b2b_frame <- if(nrow(b2b)==0){error}else{b2b}
#season_last10 <- player_data %>% arrange(desc(dateGame)) %>% head(10) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_fg3a = sum(fg3a), total_minutes = sum(minutes), total_tov = sum(tov))  %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1), tovpg = round(total_tov/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1)) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,fg_percentage,fg3_percentage,tovpg,pts_reb_ast, pts_ast,pts_reb,ast_reb) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
season_last10 <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% arrange(desc(dateGame)) %>% head(10) %>% group_by(namePlayer) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(season_last10)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(season_last10))*0)), nrow = 1, ncol=ncol(season_last10)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
season_last10_frame <- if(nrow(season_last10)==0){error}else{season_last10}
#season_last5 <- player_data %>% arrange(desc(dateGame)) %>% head(5) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_fg3a = sum(fg3a), total_minutes = sum(minutes), total_tov = sum(tov))  %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1), tovpg = round(total_tov/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1)) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,fg_percentage,fg3_percentage,tovpg,pts_reb_ast,pts_ast,pts_reb,ast_reb) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
season_last5 <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% arrange(desc(dateGame)) %>% head(5) %>% group_by(namePlayer) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(season_last5)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(season_last5))*0)), nrow = 1, ncol=ncol(season_last5)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
season_last5_frame <- if(nrow(season_last5)==0){error}else{season_last5}
#season_home <- player_data %>% filter(locationGame == "H", typeSeason == "Regular Season") %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_fg3a = sum(fg3a), total_minutes = sum(minutes), total_tov = sum(tov))  %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1), tovpg = round(total_tov/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1)) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,fg_percentage,fg3_percentage,tovpg,pts_reb_ast,pts_ast,pts_reb,ast_reb) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
season_home <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% filter(locationGame == "H", typeSeason == "Regular Season",slugSeason == current_season) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(season_home)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(season_home))*0)), nrow = 1, ncol=ncol(season_home)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
season_home_frame <- if(nrow(season_home)==0){error}else{season_home}
#season_away <- player_data %>% filter(locationGame == "A", typeSeason == "Regular Season") %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_fg3a = sum(fg3a), total_minutes = sum(minutes), total_tov = sum(tov))  %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1), tovpg = round(total_tov/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1)) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,fg_percentage,fg3_percentage,tovpg,pts_reb_ast,pts_ast,pts_reb,ast_reb) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
season_away <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% filter(locationGame == "A", typeSeason == "Regular Season",slugSeason == current_season) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(season_away)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(season_away))*0)), nrow = 1, ncol=ncol(season_away)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
season_away_frame <- if(nrow(season_away)==0){error}else{season_away}
#season_opponent <- player_data %>% filter(slugOpponent == next_opponent, typeSeason == "Regular Season") %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_fg3a = sum(fg3a), total_minutes = sum(minutes), total_tov = sum(tov))  %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1), tovpg = round(total_tov/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1)) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,fg_percentage,fg3_percentage,tovpg,pts_reb_ast,pts_ast,pts_reb,ast_reb) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
season_opponent <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% filter(slugOpponent == next_opponent, typeSeason == "Regular Season",slugSeason == current_season) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(season_opponent)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(season_opponent))*0)), nrow = 1, ncol=ncol(season_opponent)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
season_opponent_frame <- if(nrow(season_opponent)==0){error}else{season_opponent}
#playoff <- player_data %>% filter(typeSeason == "Playoffs") %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_fg3a = sum(fg3a), total_minutes = sum(minutes), total_tov = sum(tov))  %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1), tovpg = round(total_tov/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1)) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,fg_percentage,fg3_percentage,tovpg,pts_reb_ast,pts_ast,pts_reb,ast_reb) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
playoff <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% filter(typeSeason == "Playoffs") %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(playoff)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(playoff))*0)), nrow = 1, ncol=ncol(playoff)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
playoff_frame <- if(nrow(playoff)==0){error}else{playoff}
playoff_away <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata  %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% filter(typeSeason == "Playoffs", locationGame == "A") %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(playoff_away)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(playoff_away))*0)), nrow = 1, ncol=ncol(playoff_away)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
playoff_away_frame <- if(nrow(playoff_away)==0){error}else{playoff_away}
playoff_home <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata  %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% filter(typeSeason == "Playoffs", locationGame == "H") %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(playoff_home)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(playoff_home))*0)), nrow = 1, ncol=ncol(playoff_home)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
playoff_home_frame <- if(nrow(playoff_home)==0){error}else{playoff_home}
regular_season_w <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata  %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% filter(typeSeason == "Regular Season", outcomeGame == "W",slugSeason == current_season) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(regular_season_w)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(regular_season_w))*0)), nrow = 1, ncol=ncol(regular_season_w)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
regular_season_w_frame <- if(nrow(regular_season_w)==0){error}else{regular_season_w}
regular_season_l <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata  %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% filter(typeSeason == "Regular Season", outcomeGame == "L",slugSeason == current_season) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(regular_season_l)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(regular_season_l))*0)), nrow = 1, ncol=ncol(regular_season_l)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
regular_season_l_frame <- if(nrow(regular_season_l)==0){error}else{regular_season_l}
rest_0 <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata  %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% filter(typeSeason == "Regular Season", countDaysRestPlayer == 0,slugSeason == current_season) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(rest_0)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(rest_0))*0)), nrow = 1, ncol=ncol(rest_0)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
rest_0_frame <- if(nrow(rest_0)==0){error}else{rest_0}
rest_1 <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata  %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% filter(typeSeason == "Regular Season", countDaysRestPlayer == 1,slugSeason == current_season) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(rest_1)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(rest_1))*0)), nrow = 1, ncol=ncol(rest_1)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
rest_1_frame <- if(nrow(rest_1)==0){error}else{rest_1}
rest_2 <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata  %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% filter(typeSeason == "Regular Season", countDaysRestPlayer == 2,slugSeason == current_season) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(rest_2)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(rest_2))*0)), nrow = 1, ncol=ncol(rest_2)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
rest_2_frame <- if(nrow(rest_2)==0){error}else{rest_2}
rest_3 <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata  %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% mutate(first = replace_na((first),0)) %>% filter(typeSeason == "Regular Season", countDaysRestPlayer >= 3,slugSeason == current_season) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(rest_3)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(rest_3))*0)), nrow = 1, ncol=ncol(rest_3)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
rest_3_frame <- if(nrow(rest_3)==0){error}else{rest_3}
western <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata  %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% left_join(conference %>% rename(slugOpponent = slugTeam), by = "slugOpponent") %>% mutate(first = replace_na((first),0)) %>% filter(typeSeason == "Regular Season", nameConference == "Western",slugSeason == current_season) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(western)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(western))*0)), nrow = 1, ncol=ncol(western)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
western_frame <- if(nrow(western)==0){error}else{western}
eastern <- player_data %>% left_join(play_play_rebounds %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqrebounds = n()), by = "idGame") %>% mutate(firstqrebounds = replace_na(firstqrebounds,0)) %>% left_join(play_play_assists %>% filter(numberPeriod == 1) %>% group_by(idGame) %>% summarize(firstqassists = n()), by = "idGame") %>% mutate(firstqassists = replace_na(firstqassists,0)) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n(),firstqpoints = sum(pts)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame) %>% summarize(firstqpoints = sum(firstqpoints)), by = "idGame") %>% mutate(firstqpoints = replace_na(firstqpoints,0)) %>% left_join(play_play_makes %>% group_by(idGame,namePlayer1,slugScore,scoreHome,scoreAway,score_type) %>% summarize(n = n()) %>% mutate(first = ifelse((scoreHome >0 & scoreAway == 0) | (scoreAway > 0 & scoreHome == 0),1,0))%>% left_join(gamedata  %>% group_by(idGame,dateGame,typeSeason) %>% summarize(n = n()), by = "idGame") %>% group_by(idGame,first) %>% summarize(n = n()) %>% filter(first == 1), by = "idGame") %>% left_join(conference %>% rename(slugOpponent = slugTeam), by = "slugOpponent") %>% mutate(first = replace_na((first),0)) %>% filter(typeSeason == "Regular Season", nameConference == "Eastern",slugSeason == current_season) %>% group_by(namePlayer,slugSeason) %>% summarize(n = n(), total_pts = sum(pts), total_reb = sum(treb), total_ast = sum(ast), total_stl = sum(stl), total_blk = sum(blk), total_fgm = sum(fgm), total_fga = sum(fga), total_fg3m = sum(fg3m), total_minutes = sum(minutes), total_tov = sum(tov), total_first = sum(first), totalfqpts = sum(firstqpoints), totalfqast = sum(firstqassists), totalfqtreb = sum(firstqrebounds), totalftm = sum(ftm), total_fg3a = sum(fg3a)) %>% mutate(ppg = round(total_pts/n,1), rpg = round(total_reb/n,1), apg = round(total_ast/n,1), spg = round(total_stl/n,1), bpg = round(total_blk/n,1), fg_percentage = round((total_fgm/total_fga)*100,1), fg3_percentage = round((total_fg3m/total_fg3a)*100,1), min = round(total_minutes/n,1),threepg = round(total_fg3m/n,1),threeattempt = round(total_fg3a/n,1), tovpg = round(total_tov/n,1), pts_ast = round((total_pts+total_ast)/n,1), pts_reb_ast = round((total_reb+total_pts+total_ast)/n,1), pts_reb = round((total_pts+total_reb)/n,1), ast_reb = round((total_ast+total_reb)/n,1),firstqppg = round(totalfqpts/n,1), firstqapg = round(totalfqast/n,1), firstqrpg = round(totalfqtreb/n,1), pts_per_attempt = round(total_pts/total_fga,2), ftmpg = round(totalftm/n,1),stl_blk = round((total_blk+total_stl)/n,1), fgapg = round(total_fga/n,1),fgmpg = round(total_fgm/n,1) ) %>% select(n,min,ppg,rpg,apg,spg,bpg,threepg,threeattempt,fg_percentage,fgmpg,fgapg,fg3_percentage,ftmpg,tovpg, pts_reb_ast, pts_ast,pts_reb,ast_reb,stl_blk, total_first,firstqppg,firstqapg,firstqrpg, pts_per_attempt) %>%rename(GP = n,`FG` = fg_percentage, `FG_3P` = fg3_percentage)
names <- colnames(eastern)
error <- as.data.frame(matrix(c(player_name[1], as.integer(seq(1:ncol(eastern))*0)), nrow = 1, ncol=ncol(eastern)))
colnames(error) <- names
error[, -1] <- sapply(error[, -1], as.numeric)
eastern_frame <- if(nrow(eastern)==0){error}else{eastern}
Type <- c("2024/25 Regular Season","2023/24 Regular Season","Last 10 GP","Last 5 GP","2024/25 Regular Season Home","2024/25 Regular Season Away",paste("Against",next_opponent,"Regular Season"),"Regular Season Wins","Regular Season Losses","0 Days Rest","1 Day Rest","2 Days Rest","3+ Days Rest","Against Western Conference Opponents","Against Eastern Conference Opponents")
combined <- bind_rows(season_frame,season_last_frame,season_last10_frame,season_last5_frame,season_home_frame,season_away_frame,season_opponent_frame,regular_season_w_frame,regular_season_l_frame,rest_0_frame,rest_1_frame,rest_2_frame,rest_3_frame,western_frame,eastern_frame)
df <- data.frame(Type,combined)
df2 <- df %>% select(Type,GP,min,ppg,rpg,apg,spg,bpg,tovpg,fgmpg,fgapg,threepg,threeattempt,ftmpg,FG,FG_3P,pts_reb_ast,pts_ast,pts_reb,ast_reb,stl_blk,total_first,firstqppg,firstqapg,firstqrpg,pts_per_attempt) %>%
rename(Min = min,
PPG = ppg,
RPG = rpg,
APG = apg,
SPG = spg,
BPG = bpg,
TOV = tovpg,
FGM = fgmpg,
FGA = fgapg,
FG3M = threepg,
FG3A = threeattempt,
FTM = ftmpg,
`FG%` = FG,
`3FG%` = FG_3P,
`Pts+Reb+Ast` = pts_reb_ast,
`Pts+Ast` = pts_ast,
`Pts+Reb` = pts_reb,
`Reb+Ast` = ast_reb,
`Stl+Blk` = stl_blk,
`First Scorer Count` = total_first,
`Q1 PPG` = firstqppg,
`Q1 APG` = firstqapg,
`Q1 RPG` = firstqrpg,
`Pts Per Attempt` = pts_per_attempt)
df2 <- replace(df2, is.na(df2),0)
#print.data.frame(df2)
formattable(df2,align = "c",list(Min = color_tile("white","gold"),PPG = color_tile("white","gold"),RPG = color_tile("white","gold"),APG = color_tile("white","gold"),SPG = color_tile("white","gold"),BPG = color_tile("white","gold"),TOV = color_tile("white","gold"),FGM = color_tile("white","gold"),FGA = color_tile("white","gold"),FG3M = color_tile("white","gold"),FG3A = color_tile("white","gold"),FTM = color_tile("white","gold"),`FG%` = color_tile("white","gold"),`3FG%`= color_tile("white","gold"), `Pts+Reb+Ast` = color_tile("white","gold"), `Pts+Ast` = color_tile("white","gold"), `Pts+Reb` = color_tile("white","gold"), `Reb+Ast` = color_tile("white","gold"),`Stl+Blk` = color_tile("white","gold"), `First Scorer Count` = color_tile("white","gold"), `Q1 PPG` = color_tile("white","gold"), `Q1 APG` = color_tile("white","gold"), `Q1 RPG` = color_tile("white","gold"), `Pts Per Attempt` = color_tile("white","gold")), caption = "Note: Last xx Games Played May Include Last Season's Data")
library(plotly)
library(ggbreak)
metric = "minutes"
avg <- mean(player_data %>% filter(typeSeason == "Regular Season", slugSeason == current_season) %>% pull(metric))
avg_lastx <- mean(player_data %>% arrange(desc(dateGame)) %>% head(params$games) %>% pull(metric))
p <- player_data %>% ggplot(aes(dateGame,.data[[metric]], label = slugOpponent)) +geom_line() + geom_point(aes(color = locationGame, shape = typeSeason)) + geom_smooth(span = 0.6) + labs(x = "Date")  + scale_y_continuous(breaks = seq(0,90,2)) + geom_hline(yintercept = avg) + ggtitle(toupper(paste(player_name,metric,"Per Game")), subtitle = toupper(paste("Current Season Avg:",round(avg,1),"/","Avg Last",params$games,"games:",round(avg_lastx,1)))) + theme_minimal() + scale_x_date(breaks = "1 month", date_labels = "%b") + scale_color_manual(values = c(primary_color,secondary_color)) + scale_shape_manual(values = c(15,16)) + facet_grid(~ slugSeason, scales = "free_x")+ guides(color = guide_legend(title = ""),shape = guide_legend(title = ""))
ggplotly(p) %>% layout(legend = list(orientation = "h", x = 0, y = -0.2),
title = list(text = toupper(paste(player_name,metric,"Per Game",'<br>','<sup>',toupper(paste("Current Season Avg:",round(avg,1),"/","Avg Last",params$games,"games:",round(avg_lastx,1))),'</sup>'))))
player_name
ggplotly(p) %>% layout(legend = list(orientation = "h", x = 0, y = -0.2),
title = list(text = toupper(paste(player_name[1],metric,"Per Game",'<br>','<sup>',toupper(paste("Current Season Avg:",round(avg,1),"/","Avg Last",params$games,"games:",round(avg_lastx,1))),'</sup>'))))
p
player_name[1]
toupper(paste(player_name[1],metric,"Per Game",'<br>','<sup>',toupper(paste("Current Season Avg:",round(avg,1),"/","Avg Last",params$games,"games:",round(avg_lastx,1))),'</sup>'))
ggplotly(p) %>% layout(legend = list(orientation = "h", x = 0, y = -0.2),
title = list(text = toupper(paste(player_name[1],metric,"Per Game",'<br>','<sup>',toupper(paste("Current Season Avg:",round(avg,1),"/","Avg Last",params$games,"games:",round(avg_lastx,1))),'</sup>'))))
ggplotly(p) %>% layout(legend = list(orientation = "h", x = 0, y = -0.2))
ggplotly(p)
player_data
player_data %>% ggplot(aes(dateGame,.data[[metric]], label = slugOpponent)) +geom_line() + geom_point(aes(color = locationGame, shape = typeSeason)) + geom_smooth(span = 0.6) + labs(x = "Date")  + scale_y_continuous(breaks = seq(0,90,2)) + geom_hline(yintercept = avg) + ggtitle(toupper(paste(player_name,metric,"Per Game")), subtitle = toupper(paste("Current Season Avg:",round(avg,1),"/","Avg Last",params$games,"games:",round(avg_lastx,1)))) + theme_minimal() + scale_x_date(breaks = "1 month", date_labels = "%b") + scale_color_manual(values = c(primary_color,secondary_color)) + scale_shape_manual(values = c(15,16)) + facet_grid(~ slugSeason, scales = "free_x")+ guides(color = guide_legend(title = ""),shape = guide_legend(title = ""))
p <- player_data %>% ggplot(aes(dateGame,.data[[metric]], label = slugOpponent)) +geom_line() + geom_point(aes(color = locationGame, shape = typeSeason)) + geom_smooth(span = 0.6) + labs(x = "Date")  + scale_y_continuous(breaks = seq(0,90,2)) + geom_hline(yintercept = avg) + ggtitle(toupper(paste(player_name[1],metric,"Per Game")), subtitle = toupper(paste("Current Season Avg:",round(avg,1),"/","Avg Last",params$games,"games:",round(avg_lastx,1)))) + theme_minimal() + scale_x_date(breaks = "1 month", date_labels = "%b") + scale_color_manual(values = c(primary_color,secondary_color)) + scale_shape_manual(values = c(15,16)) + facet_grid(~ slugSeason, scales = "free_x")+ guides(color = guide_legend(title = ""),shape = guide_legend(title = ""))
ggplotly(p) %>% layout(legend = list(orientation = "h", x = 0, y = -0.2),
title = list(text = toupper(paste(player_name[1],metric,"Per Game",'<br>','<sup>',toupper(paste("Current Season Avg:",round(avg,1),"/","Avg Last",params$games,"games:",round(avg_lastx,1))),'</sup>'))))
playerdata %>% filter(idPlayer == params$id) %>%
select(dateGame, idGame, slugOpponent, idPlayer, namePlayer, fgm,fga,pts,treb,ast,stl,blk,fg3m,fg3a,tov,
plusminus,minutes,locationGame, countDaysRestPlayer, isB2B, isB2BFirst, isB2BSecond) %>% pull(namePlayer)
playerdata %>% filter(idPlayer == params$id) %>%
select(dateGame, idGame, slugOpponent, idPlayer, namePlayer, fgm,fga,pts,treb,ast,stl,blk,fg3m,fg3a,tov,
plusminus,minutes,locationGame, countDaysRestPlayer, isB2B, isB2BFirst, isB2BSecond) %>% pull(namePlayer) %>% head(1)
library(foreach)
foreach(i = next_team_batch$namePlayer, j = next_team_batch$idPlayer) %do% {
rmarkdown::render(input = 'C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/ML_Parlay_TBRv12_2025.Rmd',
output_file = paste0(i,j,substr(j,start = 1, stop =3),".html"),
output_dir = file.path('C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/sheets'),
params = list(id = j))
}
library(foreach)
foreach(i = next_team_batch$namePlayer, j = next_team_batch$idPlayer) %do% {
rmarkdown::render(input = 'C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/ML_Parlay_TBRv12_2025.Rmd',
output_file = paste0(i,j,substr(j,start = 1, stop =3),".html"),
output_dir = file.path('C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/sheets'),
params = list(id = j))
}
library(tidyverse)
library(nbastatR)
library(dplyr)
library(flexdashboard)
library(parallel)
library(rvest)
rosters <- read.csv("rosters.csv")
rosters_id <- rosters %>% filter(Include == "Y") %>% pull(idPlayer)
rosters_names <- rosters %>% filter(Include == "Y") %>% pull(namePlayer)
rosters_teams <- rosters %>% filter(Include == "Y") %>% pull(idTeam)
Sys.setenv("VROOM_CONNECTION_SIZE" = 131072 * 2)
all_rosters <- seasons_rosters(seasons = 2025, return_message = FALSE)
playerdata <- game_logs(seasons = 2024:2025, result_types = "player", season_types = c("Regular Season"))
playerdata_playoffs <- game_logs(seasons = 2024, result_types = "player", season_types = c("Playoffs"))
playerdata <- bind_rows(playerdata, playerdata_playoffs)
player_name <- function(x){
playerdata %>% filter(idPlayer == x) %>%
select(dateGame, idGame, slugOpponent, idPlayer, namePlayer, fgm,fga,pts,treb,ast,stl,blk,fg3m,fg3a,tov,
plusminus,minutes,locationGame, countDaysRestPlayer, isB2B, isB2BFirst, isB2BSecond) %>% group_by(namePlayer) %>% summarize(n = n()) %>% pull(namePlayer)
}
player_name <- lapply(rosters_id,player_name)
players <- player_name
players <- unlist(players)
gameids<- playerdata %>% group_by(idGame) %>% summarize(n = n()) %>% pull(idGame)
numcores <- parallelly::availableCores()
cl <- makeCluster(numcores)
my_function <- function(x) {
library(tidyverse)
library(nbastatR)
play_play <- play_by_play_v2(game_ids = x,nest_data = F)
}
results <- parLapply(cl,gameids,my_function)
play_play <- bind_rows(results)
stopCluster(cl)
#Schedule
teams <- nba_teams(league = "NBA")
teams <- teams %>% filter(idLeague == 2, idConference != 0) %>% select(cityTeam, slugTeam, idTeam, nameTeam, urlThumbnailTeam) %>% rename(Opponent = cityTeam)
slugteams <- teams %>% select(slugTeam)
slugteams_list <- slugteams %>% mutate(slugTeam = tolower(slugTeam)) %>%
mutate(slugTeam = ifelse(slugTeam == "uta","utah",
ifelse(slugTeam == "nop","no",slugTeam))) %>% pull(slugTeam)
schedule <- lapply(slugteams_list, function(x){
testurl <- paste0("https://www.espn.com/nba/team/schedule/_/name/",x,"/seasontype/2")
h <- read_html(testurl)
tab <- h |> html_nodes("table")
tab <- tab[[1]] |> html_table()
tab <- tab |> setNames(c("Date", "Opponenet", "Time", "TV","Tickets","Tickets_dup","Unused1","Unused2"))
tab <- tab[-(1:2),]
tab <- tab %>% mutate(location = ifelse(str_detect(Opponenet,"@"),"Away","Home")) %>%
mutate(Opponent = ifelse(location == "Home", str_sub(Opponenet,3),str_sub(Opponenet,2))) %>%
mutate(Date = str_extract(Date, '\\b[^,]+$')) %>% mutate(Date = as.Date(Date, "%b%d")) %>% select(Date,location,Opponent)
tab <- tab %>% left_join(teams, by = "Opponent") %>% mutate(Team = toupper(x)) %>%
mutate(Team = ifelse(Team == "UTAH","UTA",ifelse(Team == "NO","NOP",Team))) %>% mutate(next_game = ifelse(Date >= Sys.Date(),TRUE,FALSE)) %>%
mutate(game_number = 1:n())
})
schedule <- bind_rows(schedule)
schedule <- schedule %>% filter(!is.na(Date))
#Next Game
next_game_date_teams <- schedule %>% filter(Date == schedule %>% filter(next_game == TRUE) %>% pull(Date) %>% min) %>% pull(slugTeam)
next_team_batch <- lapply(next_game_date_teams, function(x){
rosters %>% filter(slugTeam == x) %>% filter(Include == "Y") %>% select(idPlayer,namePlayer)
})
next_team_batch <- bind_rows(next_team_batch)
next_team_batch <- next_team_batch %>% left_join(playerdata %>% filter(slugSeason == "2024-25") %>% group_by(idPlayer) %>% summarize(n = n()) %>% ungroup(), by = "idPlayer") %>% filter(n >=1)
#Back to Back Identifier
b2b_identifier <- schedule %>% filter(Date == schedule %>% filter(next_game == TRUE) %>% pull(Date) %>% min) %>% left_join(schedule %>% filter(Date == schedule %>% filter(next_game == TRUE) %>% pull(Date) %>% min+1), by = "slugTeam") %>% select(Date.y)
#Next Game+1
next_game_date_one_teams <- schedule %>% filter(Date == schedule %>% filter(next_game == TRUE) %>% pull(Date) %>% min+1) %>% pull(slugTeam)
next_team_batch_one <- lapply(next_game_date_one_teams, function(x){
rosters %>% filter(slugTeam == x) %>% filter(Include == "Y") %>% select(idPlayer,namePlayer)
})
next_team_batch_one <- bind_rows(next_team_batch_one)
next_team_batch_one <- next_team_batch_one %>% left_join(playerdata %>% filter(slugSeason == "2024-25") %>% group_by(idPlayer) %>% summarize(n = n()) %>% ungroup(), by = "idPlayer") %>% filter(n >=1)
#next_team_batch <- next_team_batch %>% pull(namePlayer)
#Previous Game
previous_game_date_teams <- schedule %>% filter(Date == schedule %>% filter(next_game == TRUE) %>% pull(Date) %>% min +1) %>% pull(slugTeam)
previous_team_batch <- lapply(previous_game_date_teams, function(x){
rosters %>% filter(slugTeam == x) %>% filter(Include == "Y") %>% select(idPlayer,namePlayer)
})
previous_team_batch <- bind_rows(previous_team_batch)
previous_team_batch <- previous_team_batch %>% left_join(playerdata %>% filter(slugSeason == "2024-25") %>% group_by(idPlayer) %>% summarize(n = n()) %>% ungroup(), by = "idPlayer") %>% filter(n >=1)
previous_team_batch <- previous_team_batch %>% pull(namePlayer)
sample <- "Kelly Oubre Jr."
wix_jobs <- write.csv(as.data.frame(players) %>% rename(namePlayer = players) %>% left_join(playerdata %>% filter(slugSeason == "2024-25") %>% group_by(namePlayer,idPlayer,slugTeam) %>% summarize(n = n()), by = "namePlayer") %>% select(namePlayer,idPlayer,slugTeam) %>% left_join(teams, by = "slugTeam") %>% select(namePlayer, idPlayer, nameTeam) %>% mutate(HTML = paste0("{\"nodes\":[{\"type\":\"PARAGRAPH\",\"id\":\"hlkd5116\",\"nodes\":[],\"paragraphData\":{}},{\"type\":\"HTML\",\"id\":\"cps99115\",\"nodes\":[],\"htmlData\":{\"containerData\":{\"textWrap\":true,\"height\":{\"custom\":\"1000\"},\"spoiler\":{},\"alignment\":\"CENTER\",\"width\":{\"custom\":\"1800\"}},\"url\":\"https://raw.githack.com/backironanalytics/my-site-test/main/sheets/",gsub("^(.*?)\\s.*", "\\1",namePlayer),"%20",gsub("^\\S+ ", "",namePlayer),idPlayer,substr(idPlayer,start = 1, stop =3),".html\",\"source\":\"HTML\"}},{\"type\":\"PARAGRAPH\",\"id\":\"zuhhp117\",\"nodes\":[],\"paragraphData\":{}}],\"metadata\":{\"version\":1,\"createdTimestamp\":\"2022-12-19T17:56:18.279Z\",\"updatedTimestamp\":\"2022-12-19T17:56:18.279Z\",\"id\":\"857a69b7-4e6b-4821-973a-064010acd74b\"},\"documentStyle\":{}}")),"jobs_test2.csv")
next_team_batch_one
schedule %>% filter(next_game == TRUE) %>% pull(Date) %>% min+1
schedule %>% filter(Date == schedule %>% filter(next_game == TRUE) %>% pull(Date) %>% min+1) %>% pull(slugTeam)
library(foreach)
foreach(i = next_team_batch_one$namePlayer, j = next_team_batch_one$idPlayer) %do% {
rmarkdown::render(input = 'C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/ML_Parlay_TBRv12_2025.Rmd',
output_file = paste0(i,j,substr(j,start = 1, stop =3),".html"),
output_dir = file.path('C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/sheets'),
params = list(id = j))
}
