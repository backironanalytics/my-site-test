tov_df$namePlayer <- stri_trans_general(str = tov_df$namePlayer, id = "Latin-ASCII")
tov_df <- tov_df %>% left_join(dk_tov, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>%
left_join(playerdata %>% filter(typeSeason == "Regular Season", slugSeason == "2024-25") %>% group_by(idPlayer) %>%
summarize(avg = mean(tov), GP = n()), by = "idPlayer") %>%
left_join(tov_df %>% filter(Type == "Regular Season") %>% group_by(idPlayer) %>% summarize(variation_regular = mean(sd)), by = "idPlayer")
tov_df_join <- tov_df  %>% mutate(Ident = ifelse(season_hit < .30 & Type == "Regular Season", 1,0)) %>%
group_by(namePlayer,idPlayer) %>% summarize(Ident = mean(Ident))
tov_picks <- tov_df %>% left_join(tov_df_join, by = c("namePlayer","idPlayer")) %>%
left_join(min_ten %>% arrange(dateGame) %>% group_by(idPlayer) %>% summarize(minutes = list(minutes)), by = "idPlayer") %>%
left_join(min_ten  %>% arrange(dateGame) %>% group_by(idPlayer) %>% summarize(tov = list(tov)), by = "idPlayer") %>%
group_by(namePlayer,idPlayer, OU, Under, Type, avg = round(avg,1),
variation_regular = round(variation_regular,1), minutes, tov, GP) %>%
summarize(season_hit) %>% ungroup() %>% mutate(season_hit = 1 - season_hit) %>%pivot_wider(names_from = Type, values_from = season_hit) %>% left_join(all_rosters %>% select(idPlayer,slugTeam), by = "idPlayer") %>%
left_join(teams %>% select(slugTeam,urlThumbnailTeam), by = "slugTeam") %>%
left_join(matchup %>% select(slugTeam,matchup), by = "slugTeam") %>%
relocate(urlThumbnailTeam, .after = namePlayer) %>% relocate(matchup, .after = urlThumbnailTeam)  %>%
relocate(minutes, .after = Under) %>% relocate(tov, .after = minutes) %>% relocate(GP, .after = tov)  %>% select(-c(slugTeam,idPlayer, variation_regular))
# reactable(highlight = TRUE, striped = TRUE,tov_picks, columns = list(namePlayer = colDef(name = "Player",sticky = "left", width = 110,
#                                                                                          style = cell_style(font_weight = "bold")),
#                                                                      urlThumbnailTeam = colDef(name = "Team",cell = embed_img(height = "25",width="25")),
#                                                                      avg = colDef(name = "Season Avg"),
#                                                                      GP = colDef(name = "Games Played"),
#                                                                      minutes = colDef(name = "Minutes Last 10 GP",cell = function(value,index) {
#                                                                        sparkline(tov_picks$minutes[[index]], height = 50)
#                                                                      }),
#                                                                      tov = colDef(name = "Total Turnovers Last 10 GP",cell = function(value,index) {
#                                                                        sparkline(tov_picks$tov[[index]], type = "bar", height = 50)
#                                                                      }),
#                                                                      Under = colDef(name = "Odds"),
#                                                                      OU = colDef(name = "Total Turnovers O/U",width = 110),
#                                                                      `Away Games` = colDef(cell = data_bars(tov_picks,
#                                                                                                             fill_color = color_set,
#                                                                                                             background = '#F1F1F1',
#                                                                                                             min_value = 0,
#                                                                                                             max_value = 1,
#                                                                                                             text_position = 'outside-end',
#                                                                                                             number_fmt = scales::percent)),
#                                                                      `Home Games` = colDef(cell = data_bars(tov_picks,
#                                                                                                             fill_color = color_set,
#                                                                                                             background = '#F1F1F1',
#                                                                                                             min_value = 0,
#                                                                                                             max_value = 1,
#                                                                                                             text_position = 'outside-end',
#                                                                                                             number_fmt = scales::percent)),
#                                                                      `Last 10` = colDef(cell = data_bars(tov_picks,
#                                                                                                          fill_color = color_set,
#                                                                                                          background = '#F1F1F1',
#                                                                                                          min_value = 0,
#                                                                                                          max_value = 1,
#                                                                                                          text_position = 'outside-end',
#                                                                                                          number_fmt = scales::percent)),
#                                                                      `Last 5` = colDef(cell = data_bars(tov_picks,
#                                                                                                         fill_color = color_set,
#                                                                                                         background = '#F1F1F1',
#                                                                                                         min_value = 0,
#                                                                                                         max_value = 1,
#                                                                                                         text_position = 'outside-end',
#                                                                                                         number_fmt = scales::percent)),
#                                                                      `Regular Season` = colDef(cell = data_bars(tov_picks,
#                                                                                                                 fill_color = color_set,
#                                                                                                                 background = '#F1F1F1',
#                                                                                                                 min_value = 0,
#                                                                                                                 max_value = 1,
#                                                                                                                 text_position = 'outside-end',
#                                                                                                                 number_fmt = scales::percent))),
#           theme = fivethirtyeight(), defaultPageSize = 20, fullWidth = TRUE, searchable = TRUE, language = reactableLang(searchPlaceholder = "SEARCH FOR A PLAYER"),
#           paginationType = "simple")
##Points
pts <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(3.5,40.5,1)
sd <- sd(playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25")  %>%
pull(pts))
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test), sd = sd, .groups = 'drop') %>%
ungroup()
})
hit_rate_above
})
pts <- bind_rows(pts) %>% unnest(cols = everything()) %>% mutate(Type = "Regular Season")
##Points Home Games
pts_home <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(3.5,40.5,1)
sd <- sd(playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "H")  %>%
pull(pts))
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "H") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test),sd = sd, .groups = 'drop') %>%
ungroup()
})
hit_rate_above
})
pts_home <- bind_rows(pts_home) %>% unnest(cols = everything()) %>% mutate(Type = "Home Games")
##Points Away Games
pts_away <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(3.5,40.5,1)
sd <- sd(playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "A")  %>%
pull(pts))
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "A") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test),sd = sd, .groups = 'drop') %>%
ungroup()
})
hit_rate_above
})
pts_away <- bind_rows(pts_away) %>% unnest(cols = everything()) %>% mutate(Type = "Away Games")
##Points Last 10
pts_ten <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(3.5,40.5,1)
sd <- sd(playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>% arrange(desc(dateGame)) %>% head(10) %>%
pull(pts))
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts) %>% arrange(desc(dateGame)) %>% head(10)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test),sd = sd, .groups = 'drop') %>%
ungroup()
})
hit_rate_above
})
pts_ten <- bind_rows(pts_ten) %>% unnest(cols = everything()) %>% mutate(Type = "Last 10")
##Points Last 5
pts_five <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(3.5,40.5,1)
sd <- sd(playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>% arrange(desc(dateGame)) %>% head(5) %>%
pull(pts))
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts) %>% arrange(desc(dateGame)) %>% head(5)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test), sd = sd, .groups = 'drop') %>%
ungroup()
})
hit_rate_above
})
pts_five <- bind_rows(pts_five) %>% unnest(cols = everything()) %>% mutate(Type = "Last 5")
pts_df <- bind_rows(pts,pts_away,pts_home,pts_five,pts_ten)
pts_df$namePlayer <- stri_trans_general(str = pts_df$namePlayer, id = "Latin-ASCII")
pts_df <- pts_df %>% left_join(dk_pts, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>%
left_join(playerdata %>% filter(typeSeason == "Regular Season", slugSeason == "2024-25") %>% group_by(idPlayer) %>%
summarize(avg = mean(pts), GP = n()), by = "idPlayer") %>%
left_join(pts_df %>% filter(Type == "Regular Season") %>% group_by(idPlayer) %>% summarize(variation_regular = mean(sd)), by = "idPlayer")
pts_df_join <- pts_df  %>% mutate(Ident = ifelse(season_hit < .30 & Type == "Regular Season", 1,0)) %>%
group_by(namePlayer,idPlayer) %>% summarize(Ident = mean(Ident))
pts_picks <- pts_df %>% left_join(pts_df_join, by = c("namePlayer","idPlayer")) %>%
left_join(min_ten %>% arrange(dateGame) %>% group_by(idPlayer) %>% summarize(minutes = list(minutes)), by = "idPlayer") %>%
left_join(min_ten  %>% arrange(dateGame) %>% group_by(idPlayer) %>% summarize(pts = list(pts)), by = "idPlayer") %>%
group_by(namePlayer,idPlayer, OU, Under, Type, avg = round(avg,1),
variation_regular = round(variation_regular,1), minutes, pts, GP) %>%
summarize(season_hit) %>% ungroup() %>% mutate(season_hit = 1 - season_hit) %>%pivot_wider(names_from = Type, values_from = season_hit) %>% left_join(all_rosters %>% select(idPlayer,slugTeam), by = "idPlayer") %>%
left_join(teams %>% select(slugTeam,urlThumbnailTeam), by = "slugTeam") %>%
left_join(matchup %>% select(slugTeam,matchup), by = "slugTeam") %>%
relocate(urlThumbnailTeam, .after = namePlayer) %>% relocate(matchup, .after = urlThumbnailTeam)  %>%
relocate(minutes, .after = Under) %>% relocate(pts, .after = minutes) %>% relocate(GP, .after = pts)  %>% select(-c(slugTeam,idPlayer, variation_regular))
# reactable(highlight = TRUE, striped = TRUE,pts_picks, columns = list(namePlayer = colDef(name = "Player",sticky = "left", width = 110,
#                                                                                          style = cell_style(font_weight = "bold")),
#                                                                      urlThumbnailTeam = colDef(name = "Team",cell = embed_img(height = "25",width="25")),
#                                                                      avg = colDef(name = "Season Avg"),
#                                                                      GP = colDef(name = "Games Played"),
#                                                                      minutes = colDef(name = "Minutes Last 10 GP",cell = function(value,index) {
#                                                                        sparkline(pts_picks$minutes[[index]], height = 50)
#                                                                      }),
#                                                                      pts = colDef(name = "Total Points Last 10 GP",cell = function(value,index) {
#                                                                        sparkline(pts_picks$pts[[index]], type = "bar", height = 50)
#                                                                      }),
#                                                                      Under = colDef(name = "Odds"),
#                                                                      OU = colDef(name = "Total Points O/U",width = 110),
#                                                                      `Away Games` = colDef(cell = data_bars(pts_picks,
#                                                                                                             fill_color = color_set,
#                                                                                                             background = '#F1F1F1',
#                                                                                                             min_value = 0,
#                                                                                                             max_value = 1,
#                                                                                                             text_position = 'outside-end',
#                                                                                                             number_fmt = scales::percent)),
#                                                                      `Home Games` = colDef(cell = data_bars(pts_picks,
#                                                                                                             fill_color = color_set,
#                                                                                                             background = '#F1F1F1',
#                                                                                                             min_value = 0,
#                                                                                                             max_value = 1,
#                                                                                                             text_position = 'outside-end',
#                                                                                                             number_fmt = scales::percent)),
#                                                                      `Last 10` = colDef(cell = data_bars(pts_picks,
#                                                                                                          fill_color = color_set,
#                                                                                                          background = '#F1F1F1',
#                                                                                                          min_value = 0,
#                                                                                                          max_value = 1,
#                                                                                                          text_position = 'outside-end',
#                                                                                                          number_fmt = scales::percent)),
#                                                                      `Last 5` = colDef(cell = data_bars(pts_picks,
#                                                                                                         fill_color = color_set,
#                                                                                                         background = '#F1F1F1',
#                                                                                                         min_value = 0,
#                                                                                                         max_value = 1,
#                                                                                                         text_position = 'outside-end',
#                                                                                                         number_fmt = scales::percent)),
#                                                                      `Regular Season` = colDef(cell = data_bars(pts_picks,
#                                                                                                                 fill_color = color_set,
#                                                                                                                 background = '#F1F1F1',
#                                                                                                                 min_value = 0,
#                                                                                                                 max_value = 1,
#                                                                                                                 text_position = 'outside-end',
#                                                                                                                 number_fmt = scales::percent))),
#           theme = fivethirtyeight(), defaultPageSize = 20, fullWidth = TRUE, searchable = TRUE, language = reactableLang(searchPlaceholder = "SEARCH FOR A PLAYER"),
#           paginationType = "simple")
##Assists
ast <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(0.5,13.5,1)
sd <- sd(playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25")  %>%
pull(ast))
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(ast_reb_ast = ast+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,ast)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(ast > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test), sd = sd, .groups = 'drop') %>%
ungroup()
})
hit_rate_above
})
ast <- bind_rows(ast) %>% unnest(cols = everything()) %>% mutate(Type = "Regular Season")
##Assists Home Games
ast_home <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(0.5,13.5,1)
sd <- sd(playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "H")  %>%
pull(ast))
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "H") %>%
mutate(ast_reb_ast = ast+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,ast)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(ast > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test),sd = sd, .groups = 'drop') %>%
ungroup()
})
hit_rate_above
})
ast_home <- bind_rows(ast_home) %>% unnest(cols = everything()) %>% mutate(Type = "Home Games")
##Assists Away Games
ast_away <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(0.5,13.5,1)
sd <- sd(playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "A")  %>%
pull(ast))
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "A") %>%
mutate(ast_reb_ast = ast+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,ast)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(ast > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test),sd = sd, .groups = 'drop') %>%
ungroup()
})
hit_rate_above
})
ast_away <- bind_rows(ast_away) %>% unnest(cols = everything()) %>% mutate(Type = "Away Games")
##Assists Last 10
ast_ten <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(0.5,13.5,1)
sd <- sd(playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>% arrange(desc(dateGame)) %>% head(10) %>%
pull(ast))
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(ast_reb_ast = ast+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,ast) %>% arrange(desc(dateGame)) %>% head(10)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(ast > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test),sd = sd, .groups = 'drop') %>%
ungroup()
})
hit_rate_above
})
ast_ten <- bind_rows(ast_ten) %>% unnest(cols = everything()) %>% mutate(Type = "Last 10")
##Assists Last 5
ast_five <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(0.5,13.5,1)
sd <- sd(playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>% arrange(desc(dateGame)) %>% head(5) %>%
pull(ast))
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(ast_reb_ast = ast+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,ast) %>% arrange(desc(dateGame)) %>% head(5)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(ast > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test), sd = sd, .groups = 'drop') %>%
ungroup()
})
hit_rate_above
})
ast_five <- bind_rows(ast_five) %>% unnest(cols = everything()) %>% mutate(Type = "Last 5")
ast_df <- bind_rows(ast,ast_away,ast_home,ast_five,ast_ten)
ast_df$namePlayer <- stri_trans_general(str = ast_df$namePlayer, id = "Latin-ASCII")
ast_df <- ast_df %>% left_join(dk_ast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>%
left_join(playerdata %>% filter(typeSeason == "Regular Season", slugSeason == "2024-25") %>% group_by(idPlayer) %>%
summarize(avg = mean(ast), GP = n()), by = "idPlayer") %>%
left_join(ast_df %>% filter(Type == "Regular Season") %>% group_by(idPlayer) %>% summarize(variation_regular = mean(sd)), by = "idPlayer")
ast_df_join <- ast_df  %>% mutate(Ident = ifelse(season_hit < .30 & Type == "Regular Season", 1,0)) %>%
group_by(namePlayer,idPlayer) %>% summarize(Ident = mean(Ident))
ast_picks <- ast_df %>% left_join(ast_df_join, by = c("namePlayer","idPlayer")) %>%
left_join(min_ten %>% arrange(dateGame) %>% group_by(idPlayer) %>% summarize(minutes = list(minutes)), by = "idPlayer") %>%
left_join(min_ten  %>% arrange(dateGame) %>% group_by(idPlayer) %>% summarize(ast = list(ast)), by = "idPlayer") %>%
group_by(namePlayer,idPlayer, OU, Under, Type, avg = round(avg,1),
variation_regular = round(variation_regular,1), minutes, ast, GP) %>%
summarize(season_hit) %>% ungroup() %>% mutate(season_hit = 1 - season_hit) %>%pivot_wider(names_from = Type, values_from = season_hit) %>% left_join(all_rosters %>% select(idPlayer,slugTeam), by = "idPlayer") %>%
left_join(teams %>% select(slugTeam,urlThumbnailTeam), by = "slugTeam") %>%
left_join(matchup %>% select(slugTeam,matchup), by = "slugTeam") %>%
relocate(urlThumbnailTeam, .after = namePlayer) %>% relocate(matchup, .after = urlThumbnailTeam)  %>%
relocate(minutes, .after = Under) %>% relocate(ast, .after = minutes) %>% relocate(GP, .after = ast)  %>% select(-c(slugTeam,idPlayer, variation_regular))
# reactable(highlight = TRUE, striped = TRUE,ast_picks, columns = list(namePlayer = colDef(name = "Player",sticky = "left", width = 110,
#                                                                                          style = cell_style(font_weight = "bold")),
#                                                                      urlThumbnailTeam = colDef(name = "Team",cell = embed_img(height = "25",width="25")),
#                                                                      avg = colDef(name = "Season Avg"),
#                                                                      GP = colDef(name = "Games Played"),
#                                                                      minutes = colDef(name = "Minutes Last 10 GP",cell = function(value,index) {
#                                                                        sparkline(ast_picks$minutes[[index]], height = 50)
#                                                                      }),
#                                                                      ast = colDef(name = "Total Assists Last 10 GP",cell = function(value,index) {
#                                                                        sparkline(ast_picks$ast[[index]], type = "bar", height = 50)
#                                                                      }),
#                                                                      Under = colDef(name = "Odds"),
#                                                                      OU = colDef(name = "Total Assists O/U",width = 110),
#                                                                      `Away Games` = colDef(cell = data_bars(ast_picks,
#                                                                                                             fill_color = color_set,
#                                                                                                             background = '#F1F1F1',
#                                                                                                             min_value = 0,
#                                                                                                             max_value = 1,
#                                                                                                             text_position = 'outside-end',
#                                                                                                             number_fmt = scales::percent)),
#                                                                      `Home Games` = colDef(cell = data_bars(ast_picks,
#                                                                                                             fill_color = color_set,
#                                                                                                             background = '#F1F1F1',
#                                                                                                             min_value = 0,
#                                                                                                             max_value = 1,
#                                                                                                             text_position = 'outside-end',
#                                                                                                             number_fmt = scales::percent)),
#                                                                      `Last 10` = colDef(cell = data_bars(ast_picks,
#                                                                                                          fill_color = color_set,
#                                                                                                          background = '#F1F1F1',
#                                                                                                          min_value = 0,
#                                                                                                          max_value = 1,
#                                                                                                          text_position = 'outside-end',
#                                                                                                          number_fmt = scales::percent)),
#                                                                      `Last 5` = colDef(cell = data_bars(ast_picks,
#                                                                                                         fill_color = color_set,
#                                                                                                         background = '#F1F1F1',
#                                                                                                         min_value = 0,
#                                                                                                         max_value = 1,
#                                                                                                         text_position = 'outside-end',
#                                                                                                         number_fmt = scales::percent)),
#                                                                      `Regular Season` = colDef(cell = data_bars(ast_picks,
#                                                                                                                 fill_color = color_set,
#                                                                                                                 background = '#F1F1F1',
#                                                                                                                 min_value = 0,
#                                                                                                                 max_value = 1,
#                                                                                                                 text_position = 'outside-end',
#                                                                                                                 number_fmt = scales::percent))),
#           theme = fivethirtyeight(), defaultPageSize = 20, fullWidth = TRUE, searchable = TRUE, language = reactableLang(searchPlaceholder = "SEARCH FOR A PLAYER"),
#           paginationType = "simple")
##Rebounds
treb <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(0.5,17.5,1)
sd <- sd(playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25")  %>%
pull(treb))
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(treb_reb_ast = treb+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,treb)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(treb > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test), sd = sd, .groups = 'drop') %>%
ungroup()
})
hit_rate_above
})
treb <- bind_rows(treb) %>% unnest(cols = everything()) %>% mutate(Type = "Regular Season")
##Rebounds Home Games
treb_home <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(0.5,17.5,1)
sd <- sd(playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "H")  %>%
pull(treb))
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "H") %>%
mutate(treb_reb_ast = treb+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,treb)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(treb > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test),sd = sd, .groups = 'drop') %>%
ungroup()
})
hit_rate_above
})
treb_home <- bind_rows(treb_home) %>% unnest(cols = everything()) %>% mutate(Type = "Home Games")
##Rebounds Away Games
treb_away <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(0.5,17.5,1)
sd <- sd(playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "A")  %>%
pull(treb))
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "A") %>%
mutate(treb_reb_ast = treb+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,treb)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(treb > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test),sd = sd, .groups = 'drop') %>%
ungroup()
})
hit_rate_above
})
treb_away <- bind_rows(treb_away) %>% unnest(cols = everything()) %>% mutate(Type = "Away Games")
##Rebounds Last 10
treb_ten <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(0.5,17.5,1)
sd <- sd(playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>% arrange(desc(dateGame)) %>% head(10) %>%
pull(treb))
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(treb_reb_ast = treb+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,treb) %>% arrange(desc(dateGame)) %>% head(10)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(treb > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test),sd = sd, .groups = 'drop') %>%
ungroup()
})
hit_rate_above
})
treb_ten <- bind_rows(treb_ten) %>% unnest(cols = everything()) %>% mutate(Type = "Last 10")
##Rebounds Last 5
treb_five <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(0.5,17.5,1)
sd <- sd(playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>% arrange(desc(dateGame)) %>% head(5) %>%
pull(treb))
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(treb_reb_ast = treb+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,treb) %>% arrange(desc(dateGame)) %>% head(5)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(treb > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test), sd = sd, .groups = 'drop') %>%
ungroup()
})
hit_rate_above
})
treb_five <- bind_rows(treb_five) %>% unnest(cols = everything()) %>% mutate(Type = "Last 5")
treb_df <- bind_rows(treb,treb_away,treb_home,treb_five,treb_ten)
treb_df$namePlayer <- stri_trans_general(str = treb_df$namePlayer, id = "Latin-ASCII")
treb_df <- treb_df %>% left_join(dk_reb, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>%
left_join(playerdata %>% filter(typeSeason == "Regular Season", slugSeason == "2024-25") %>% group_by(idPlayer) %>%
summarize(avg = mean(treb), GP = n()), by = "idPlayer") %>%
left_join(treb_df %>% filter(Type == "Regular Season") %>% group_by(idPlayer) %>% summarize(variation_regular = mean(sd)), by = "idPlayer")
treb_df_join <- treb_df  %>% mutate(Ident = ifelse(season_hit < .30 & Type == "Regular Season", 1,0)) %>%
group_by(namePlayer,idPlayer) %>% summarize(Ident = mean(Ident))
treb_picks <- treb_df %>% left_join(treb_df_join, by = c("namePlayer","idPlayer")) %>%
left_join(min_ten %>% arrange(dateGame) %>% group_by(idPlayer) %>% summarize(minutes = list(minutes)), by = "idPlayer") %>%
left_join(min_ten  %>% arrange(dateGame) %>% group_by(idPlayer) %>% summarize(treb = list(treb)), by = "idPlayer") %>%
group_by(namePlayer,idPlayer, OU, Under, Type, avg = round(avg,1),
variation_regular = round(variation_regular,1), minutes, treb, GP) %>%
summarize(season_hit) %>% ungroup() %>% mutate(season_hit = 1 - season_hit) %>%pivot_wider(names_from = Type, values_from = season_hit) %>% left_join(all_rosters %>% select(idPlayer,slugTeam), by = "idPlayer") %>%
left_join(teams %>% select(slugTeam,urlThumbnailTeam), by = "slugTeam") %>%
left_join(matchup %>% select(slugTeam,matchup), by = "slugTeam") %>%
relocate(urlThumbnailTeam, .after = namePlayer) %>% relocate(matchup, .after = urlThumbnailTeam)  %>%
relocate(minutes, .after = Under) %>% relocate(treb, .after = minutes) %>% relocate(GP, .after = treb)  %>% select(-c(slugTeam,idPlayer, variation_regular))
# reactable(highlight = TRUE, striped = TRUE,treb_picks, columns = list(namePlayer = colDef(name = "Player",sticky = "left", width = 110,
#                                                                                           style = cell_style(font_weight = "bold")),
#                                                                       urlThumbnailTeam = colDef(name = "Team",cell = embed_img(height = "25",width="25")),
#                                                                       avg = colDef(name = "Season Avg"),
#                                                                       GP = colDef(name = "Games Played"),
#                                                                       minutes = colDef(name = "Minutes Last 10 GP",cell = function(value,index) {
#                                                                         sparkline(treb_picks$minutes[[index]], height = 50)
#                                                                       }),
#                                                                       treb = colDef(name = "Total Rebounds Last 10 GP",cell = function(value,index) {
#                                                                         sparkline(treb_picks$treb[[index]], type = "bar", height = 50)
#                                                                       }),
#                                                                       Under = colDef(name = "Odds"),
#                                                                       OU = colDef(name = "Total Rebounds O/U",width = 110),
#                                                                       `Away Games` = colDef(cell = data_bars(treb_picks,
#                                                                                                              fill_color = color_set,
#                                                                                                              background = '#F1F1F1',
#                                                                                                              min_value = 0,
#                                                                                                              max_value = 1,
#                                                                                                              text_position = 'outside-end',
#                                                                                                              number_fmt = scales::percent)),
#                                                                       `Home Games` = colDef(cell = data_bars(treb_picks,
#                                                                                                              fill_color = color_set,
#                                                                                                              background = '#F1F1F1',
#                                                                                                              min_value = 0,
#                                                                                                              max_value = 1,
#                                                                                                              text_position = 'outside-end',
#                                                                                                              number_fmt = scales::percent)),
#                                                                       `Last 10` = colDef(cell = data_bars(treb_picks,
#                                                                                                           fill_color = color_set,
#                                                                                                           background = '#F1F1F1',
#                                                                                                           min_value = 0,
#                                                                                                           max_value = 1,
#                                                                                                           text_position = 'outside-end',
#                                                                                                           number_fmt = scales::percent)),
#                                                                       `Last 5` = colDef(cell = data_bars(treb_picks,
#                                                                                                          fill_color = color_set,
#                                                                                                          background = '#F1F1F1',
#                                                                                                          min_value = 0,
#                                                                                                          max_value = 1,
#                                                                                                          text_position = 'outside-end',
#                                                                                                          number_fmt = scales::percent)),
#                                                                       `Regular Season` = colDef(cell = data_bars(treb_picks,
#                                                                                                                  fill_color = color_set,
#                                                                                                                  background = '#F1F1F1',
#                                                                                                                  min_value = 0,
#                                                                                                                  max_value = 1,
#                                                                                                                  text_position = 'outside-end',
#                                                                                                                  number_fmt = scales::percent))),
#           theme = fivethirtyeight(), defaultPageSize = 20, fullWidth = TRUE, searchable = TRUE, language = reactableLang(searchPlaceholder = "SEARCH FOR A PLAYER"),
#           paginationType = "simple")
combined <- bind_rows(ptrebast_picks %>% rename(amount = pts_reb_ast) %>% mutate(Bet = "Total Pts, Reb, Ast"),
pt_reb_picks %>% rename(amount = pts_reb) %>% mutate(Bet = "Total Pts, Reb"),ast_reb_picks %>%
rename(amount = ast_reb)%>% mutate(Bet = "Total Ast, Reb"), stl_blk_picks %>%
rename(amount = stl_blk) %>% mutate(Bet = "Total Stl, Blk"), fg3m_picks %>%
rename(amount = fg3m) %>% mutate(Bet = "Total Threes Made"), stl_picks %>%
rename(amount = stl) %>% mutate(Bet = "Total Steals"), blk_picks %>%
rename(amount = blk) %>% mutate(Bet = "Total Blocks"), tov_picks %>%
rename(amount = tov) %>% mutate(Bet = "Total Turnovers"), pts_picks %>%
rename(amount = pts) %>% mutate(Bet = "Total Points"), treb_picks %>%
rename(amount = treb) %>% mutate(Bet = "Total Rebounds"), ast_picks %>%
rename(amount = ast) %>% mutate(Bet = "Total Assists")) %>% relocate(Bet, .before = namePlayer) %>%
mutate(namePlayer = paste0(substr(namePlayer,1,1),".",gsub("^\\S+ ", "",namePlayer)))
Sys.setenv(RSTUDIO_PANDOC="C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools")
rmarkdown::render(input = 'C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/Cheat_sheet.Rmd',
output_file = "prop_bet_cheat_sheet.html",
output_dir = file.path('C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/Matrix'))
combined_sample <- bind_rows(ptrebast_picks %>% rename(amount = pts_reb_ast) %>% mutate(Bet = "Total Pts, Reb, Ast"),
pt_reb_picks %>% rename(amount = pts_reb) %>% mutate(Bet = "Total Pts, Reb"),ast_reb_picks %>%
rename(amount = ast_reb)%>% mutate(Bet = "Total Ast, Reb"), stl_blk_picks %>%
rename(amount = stl_blk) %>% mutate(Bet = "Total Stl, Blk"), fg3m_picks %>%
rename(amount = fg3m) %>% mutate(Bet = "Total Threes Made"), stl_picks %>%
rename(amount = stl) %>% mutate(Bet = "Total Steals"), blk_picks %>%
rename(amount = blk) %>% mutate(Bet = "Total Blocks"), tov_picks %>%
rename(amount = tov) %>% mutate(Bet = "Total Turnovers"), pts_picks %>%
rename(amount = pts) %>% mutate(Bet = "Total Points"), treb_picks %>%
rename(amount = treb) %>% mutate(Bet = "Total Rebounds"), ast_picks %>%
rename(amount = ast) %>% mutate(Bet = "Total Assists")) %>% relocate(Bet, .before = namePlayer) %>%
mutate(namePlayer = paste0(substr(namePlayer,1,1),".",gsub("^\\S+ ", "",namePlayer))) %>% arrange(desc(`Regular Season`)) %>% head(10)
rmarkdown::render(input = 'C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/Cheat_sheet_sample.Rmd',
output_file = "prop_bet_cheat_sheet_sample.html",
output_dir = file.path('C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/Matrix'))
