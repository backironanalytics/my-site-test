library(tidyverse)
library(rvest)
library(RSelenium)
library(httr)
library(rjson)
library(nbastatR)
library(jsonlite)
#1st Quarter Points
json_file <- "https://sportsbook-nash.draftkings.com/api/sportscontent/dkusil/v1/leagues/42648/categories/1215/subcategories/16551"
json_data <- fromJSON(txt=json_file)
firstq_data_data <- json_data[5]
firstq_data_data <- as.data.frame(firstq_data_data)
# Pts Reb Ast O/U
json_file <- "https://sportsbook-nash.draftkings.com/api/sportscontent/dkusil/v1/leagues/42648/categories/583/subcategories/5001"
json_data <- fromJSON(txt=json_file)
dk_ptrebast <- json_data[5]
test <- as.data.frame(dk_ptrebast)
dk_ptrebast <- unnest(dk_ptrebast)
json_file <- "https://sportsbook-nash.draftkings.com/api/sportscontent/dkusil/v1/leagues/42648/categories/583/subcategories/5001"
json_data <- fromJSON(txt=json_file)
dk_ptrebast <- json_data[5]
dk_ptrebast <- as.data.frame(dk_ptrebast)
dk_ptrebast <- unnest(dk_ptrebast)
dk_ptrebast <- dk_ptrebast %>% filter(selections.tags == "MainPointLine") %>% select(seoIdentifier,selections.label,american,selections.points) %>%
rename(namePlayer = seoIdentifier,label = selections.label,odds = american,OU = selections.points) %>% pivot_wider(names_from = label, values_from = odds)
dk_ptrebast
#Pts Ast O/U
json_file <- "https://sportsbook-nash.draftkings.com/api/sportscontent/dkusil/v1/leagues/42648/categories/583/subcategories/9973"
json_data <- fromJSON(txt=json_file)
test <- json_data[5]
test <- as.data.frame(test)
#Pts Reb O/U
json_file <- "https://sportsbook-nash.draftkings.com/api/sportscontent/dkusil/v1/leagues/42648/categories/583/subcategories/9976"
json_data <- fromJSON(txt=json_file)
test <- json_data[5]
test <- as.data.frame(test)
#Ast Reb O/U
json_file <- "https://sportsbook-nash.draftkings.com/api/sportscontent/dkusil/v1/leagues/42648/categories/583/subcategories/9974"
json_data <- fromJSON(txt=json_file)
test <- json_data[5]
test <- as.data.frame(test)
#Total Reb O/U
json_file <- "https://sportsbook-nash.draftkings.com/api/sportscontent/dkusil/v1/leagues/42648/categories/1216/subcategories/12492"
json_data <- fromJSON(txt=json_file)
test <- json_data[5]
test <- as.data.frame(test)
ptrebast
ptrebast %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over))
ptrebast %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test)
ptrebast %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% arrange(desc(season_hit))
ptrebast %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% arrange(season_hit)
##Pts Reb Ast Home Games
ptrebast_home <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(10.5,60.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "H") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts_reb_ast)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts_reb_ast > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test), .groups = 'drop') %>% ungroup()
})
hit_rate_above
})
ptrebast_home <- bind_rows(ptrebast_home)
##Pts Reb Ast Away Games
ptrebast_away <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(10.5,60.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "A") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts_reb_ast)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts_reb_ast > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test), .groups = 'drop') %>% ungroup()
})
hit_rate_above
})
ptrebast_away <- bind_rows(ptrebast_away)
##Pts Reb Ast Last 5
ptrebast_five <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(10.5,60.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts_reb_ast) %>% arrange(desc(dateGame)) %>% head(5)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts_reb_ast > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test), .groups = 'drop') %>% ungroup()
})
hit_rate_above
})
ptrebast_five <- bind_rows(ptrebast_five)
##Pts Reb Ast Last 10
ptrebast_ten <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(10.5,60.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts_reb_ast) %>% arrange(desc(dateGame)) %>% head(10)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts_reb_ast > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test), .groups = 'drop') %>% ungroup()
})
hit_rate_above
})
ptrebast_ten <- bind_rows(ptrebast_ten)
ptrebast_ten
##Pts Reb Ast
ptrebast <- lapply(next_team_batch$idPlayer, function(x){
slug_team <- all_rosters %>% filter(idPlayer == x) %>% pull(slugTeam)
hit_rate <- seq(10.5,60.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts_reb_ast)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts_reb_ast > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test), .groups = 'drop') %>%
ungroup() %>% mutate(slugTeam = slug_team)
})
hit_rate_above
})
ptrebast <- bind_rows(ptrebast) %>% mutate(Type = "Regular Season")
##Pts Reb Ast Home Games
ptrebast_home <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(10.5,60.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "H") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts_reb_ast)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts_reb_ast > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test), .groups = 'drop') %>% ungroup()
})
hit_rate_above
})
ptrebast_home <- bind_rows(ptrebast_home) %>% mutate(Type = "Home Games")
##Pts Reb Ast Away Games
ptrebast_away <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(10.5,60.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "A") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts_reb_ast)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts_reb_ast > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test), .groups = 'drop') %>% ungroup()
})
hit_rate_above
})
ptrebast_away <- bind_rows(ptrebast_away) %>% mutate(Type = "Away Games")
##Pts Reb Ast Last 5
ptrebast_five <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(10.5,60.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts_reb_ast) %>% arrange(desc(dateGame)) %>% head(5)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts_reb_ast > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test), .groups = 'drop') %>% ungroup()
})
hit_rate_above
})
ptrebast_five <- bind_rows(ptrebast_five) %>% mutate(Type = "Last 5")
##Pts Reb Ast Last 10
ptrebast_ten <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(10.5,60.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts_reb_ast) %>% arrange(desc(dateGame)) %>% head(10)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts_reb_ast > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test), .groups = 'drop') %>% ungroup()
})
hit_rate_above
})
ptrebast_ten <- bind_rows(ptrebast_ten) %>% mutate(Type = "Last 10")
ptreb_ast_df <- bind_rows(ptrebast,ptrebast_away,ptrebast_home,ptrebast_five,ptrebast_ten) %>% relocate(Type, .after = GP)
ptrebast
bind_rows(ptrebast,ptrebast_away,ptrebast_home,ptrebast_five,ptrebast_ten)
ptreb_ast_df <- bind_rows(ptrebast,ptrebast_away,ptrebast_home,ptrebast_five,ptrebast_ten)
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test)
ptreb_ast_df <- bind_rows(ptrebast,ptrebast_away,ptrebast_home,ptrebast_five,ptrebast_ten)
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% filter(namePlayer == "LeBron James")
ptrebast
ptrebast <- lapply(next_team_batch$idPlayer, function(x){
slug_team <- all_rosters %>% filter(idPlayer == x) %>% pull(slugTeam)
hit_rate <- seq(10.5,60.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts_reb_ast)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts_reb_ast > x), OU = x) %>% group_by(namePlayer, idPlayer, OU) %>% summarize(test = min(test),average = mean(pts_reb_ast), .groups = 'drop') %>%
ungroup() %>% mutate(slugTeam = slug_team)
})
hit_rate_above
})
ptrebast <- bind_rows(ptrebast) %>% mutate(Type = "Regular Season")
ptrebast
##Pts Reb Ast Home Games
ptrebast_home <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(10.5,60.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "H") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts_reb_ast)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts_reb_ast > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test),average = mean(pts_reb_ast), .groups = 'drop') %>% ungroup()
})
hit_rate_above
})
ptrebast_home <- bind_rows(ptrebast_home) %>% mutate(Type = "Home Games")
##Pts Reb Ast Away Games
ptrebast_away <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(10.5,60.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25", locationGame == "A") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts_reb_ast)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts_reb_ast > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test),average = mean(pts_reb_ast), .groups = 'drop') %>% ungroup()
})
hit_rate_above
})
ptrebast_away <- bind_rows(ptrebast_away) %>% mutate(Type = "Away Games")
##Pts Reb Ast Last 5
ptrebast_five <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(10.5,60.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts_reb_ast) %>% arrange(desc(dateGame)) %>% head(5)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts_reb_ast > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test),average = mean(pts_reb_ast), .groups = 'drop') %>% ungroup()
})
hit_rate_above
})
ptrebast_five <- bind_rows(ptrebast_five) %>% mutate(Type = "Last 5")
##Pts Reb Ast Last 10
ptrebast_ten <- lapply(next_team_batch$idPlayer, function(x){
hit_rate <- seq(10.5,60.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,pts_reb_ast) %>% arrange(desc(dateGame)) %>% head(10)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(pts_reb_ast > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test),average = mean(pts_reb_ast), .groups = 'drop') %>% ungroup()
})
hit_rate_above
})
ptrebast_ten <- bind_rows(ptrebast_ten) %>% mutate(Type = "Last 10")
ptreb_ast_df <- bind_rows(ptrebast,ptrebast_away,ptrebast_home,ptrebast_five,ptrebast_ten)
ptreb_ast_df
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test)
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% filter(namePlayer == "LeBron James")
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% filter(namePlayer == "Austin Reeves")
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% filter(namePlayer == "Austin Reaves")
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test)
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% filter(Type == "Regular Season") %>% arrange(desc(season_hit))
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% filter(namePlayer == "Derrick White")
json_file <- "https://sportsbook-nash.draftkings.com/api/sportscontent/dkusil/v1/leagues/42648/categories/1215/subcategories/16551"
json_data <- fromJSON(txt=json_file)
dk_firstqpts <- json_data[5]
dk_firstqpts <- as.data.frame(dk_firstqpts)
dk_firstqpts <- unnest(dk_firstqpts)
dk_firstqpts
dk_firstqpts <- dk_firstqpts %>% filter(selections.tags == "MainPointLine") %>% select(seoIdentifier,selections.label,american) %>%
rename(namePlayer = seoIdentifier,label = selections.label,odds = american) %>% pivot_wider(names_from = label, values_from = odds)
dk_firstqpts
json_file <- "https://sportsbook-nash.draftkings.com/api/sportscontent/dkusil/v1/leagues/42648/categories/1215/subcategories/16551"
json_data <- fromJSON(txt=json_file)
dk_firstqpts <- json_data[5]
dk_firstqpts <- as.data.frame(dk_firstqpts)
dk_firstqpts <- unnest(dk_firstqpts)
dk_firstqpts <- dk_firstqpts %>% filter(selections.tags == "MainPointLine") %>% select(seoIdentifier,selections.label,american) %>%
rename(namePlayer = seoIdentifier,label = selections.label,odds = american)
df_firstqpts
dk_firstqpts
json_file <- "https://sportsbook-nash.draftkings.com/api/sportscontent/dkusil/v1/leagues/42648/categories/1215/subcategories/16551"
json_data <- fromJSON(txt=json_file)
dk_firstqpts <- json_data[5]
dk_firstqpts <- as.data.frame(dk_firstqpts)
dk_firstqpts <- unnest(dk_firstqpts)
dk_firstqpts
dk_firstqpts %>% group_by(selections.tags) %>% summarize(n = n())
dk_firstqpts %>% filter(selections.tags == "SGP") %>% select(seoIdentifier,selections.label,american) %>%
rename(namePlayer = seoIdentifier,label = selections.label,odds = american)
dk_firstqpts %>% filter(selections.tags == "SGP") %>% select(seoIdentifier,selections.label,american) %>%
rename(namePlayer = seoIdentifier,label = selections.label,odds = american) %>% filter(namePlayer == "Pascal Siakam")
dk_firstqpts %>% filter(selections.tags == "SGP") %>% select(seoIdentifier,selections.label,american) %>%
rename(namePlayer = seoIdentifier,label = selections.label,odds = american) %>% filter(namePlayer == "Jimmy Butler")
dk_firstqpts %>% filter(selections.tags == "SGP") %>% select(seoIdentifier,selections.label,american) %>%
rename(namePlayer = seoIdentifier,label = selections.label,odds = american) %>% filter(str_detect(namePlayer,"Butler"))
dk_firstqpts
dk_firstqpts %>% select(seoIdentifier,selections.label,american) %>%
rename(namePlayer = seoIdentifier,label = selections.label,odds = american) %>% filter(str_detect(namePlayer,"Butler"))
dk_firstqpts %>% filter(selections.tags == "SGP") %>% select(seoIdentifier,selections.label,american) %>%
rename(namePlayer = seoIdentifier,label = selections.label,odds = american) %>% filter(namePlayer == "Pascal Siakam")
##1Q Points
gamedata <- game_logs(seasons = 2024, result_types = "team", season_types = c("Regular Season","Playoffs"))
gamedata_current <- game_logs(seasons = 2025, result_types = "team", season_types = c("Regular Season"))
current_season <- "2024-25"
last_season <- "2023-24"
gamedata <- bind_rows(gamedata,gamedata_current)
firstqpoints <- lapply(next_team_batch$idPlayer, function(x){
slug_team <- all_rosters %>% filter(idPlayer == x) %>% pull(slugTeam)
hit_rate <- seq(0.5,10.5,1)
play_play_player <- play_play %>% filter(idPlayerNBA1 == x, !is.na(slugScore))
play_play_makes <- play_play_player %>% select(idGame,numberPeriod, descriptionPlayHome,descriptionPlayNeutral,descriptionPlayVisitor, namePlayer1,slugScore,scoreHome,scoreAway,slugTeamPlayer1) %>% rename(slugTeam = slugTeamPlayer1) %>% mutate(description = ifelse(is.na(descriptionPlayHome),ifelse(is.na(descriptionPlayNeutral),descriptionPlayVisitor,descriptionPlayNeutral),descriptionPlayHome)) %>% mutate(free_throw_flag = str_detect(description,"Free Throw"), three_point_flag = str_detect(description,"3PT")) %>% mutate(two_point_flag = ifelse(free_throw_flag == FALSE & three_point_flag == FALSE, TRUE,FALSE)) %>% left_join(gamedata %>% group_by(idGame,dateGame,typeSeason,locationGame,slugTeam,slugSeason) %>% summarize(n = n()), by = c("idGame","slugTeam")) %>% mutate(pts = ifelse(free_throw_flag == TRUE,1,ifelse(two_point_flag== TRUE,2,3)),score_type = ifelse(free_throw_flag == TRUE,"Free Throw",ifelse(two_point_flag== TRUE,"2 pt","3 pt")))
firstq_makes <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>% group_by(dateGame,locationGame,typeSeason,slugOpponent,slugSeason,namePlayer,idPlayer,slugTeam) %>% summarize(n = n()) %>% left_join(play_play_makes %>% filter(numberPeriod == 1) %>% group_by(dateGame) %>% summarize(pts = sum(pts)), by = "dateGame") %>% mutate(pts = replace_na(pts,0))
hit_rate_above <- lapply(hit_rate, function(x){
firstq_makes %>% ungroup() %>% mutate(test = mean(pts > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test), .groups = 'drop') %>%
ungroup() %>% mutate(slugTeam = slug_team)
})
hit_rate_above
})
firstqpoints <- bind_rows(firstqpoints) %>% unnest(cols = everything())
firstqpoints
dk_firstqpts
dk_firstqpts <- dk_firstqpts %>% filter(selections.tags == "SGP") %>% select(seoIdentifier,selections.label,american) %>%
rename(namePlayer = seoIdentifier,label = selections.label,odds = american)
dk_firstqpts
dk_firstqpts %>% group_by(label) %>% summarize(n = n())
dk_firstqpts %>% mutate(label = ifelse(label == "3+",2.5,label))
dk_firstqpts %>% mutate(label = ifelse(label == "3+",2.5,ifelse(label == "4+",3.5,label))
dk_firstqpts %>% mutate(label = ifelse(label == "3+",2.5,ifelse(label == "4+",3.5,label)))
dk_firstqpts %>% mutate(label = ifelse(label == "3+",2.5,ifelse(label == "4+",3.5,ifelse(label == "5+",4.5,ifelse(label == "6+",5.5,ifelse(label == "7+",6.5,ifelse(label == "8+",7.5,label)))))))
dk_firstqpts <- dk_firstqpts %>%
mutate(label = ifelse(label == "3+",2.5,ifelse(label == "4+",3.5,ifelse(label == "5+",4.5,ifelse(label == "6+",5.5,ifelse(label == "7+",6.5,ifelse(label == "8+",7.5,label)))))))
dk_firstqpts
dk_firstqpts %>% filter(namePlayer == "Pascal Siakam")
firstqpoints
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU), by = c("namePlayer","label"))
firstqpoints %>% rename(label = OU)
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label"))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(namePlayer == "Damian Lillard")
json_file <- "https://sportsbook-nash.draftkings.com/api/sportscontent/dkusil/v1/leagues/42648/categories/1215/subcategories/16551"
json_data <- fromJSON(txt=json_file)
dk_firstqpts <- json_data[5]
dk_firstqpts <- as.data.frame(dk_firstqpts)
dk_firstqpts <- unnest(dk_firstqpts)
dk_firstqpts <- dk_firstqpts %>% filter(selections.tags == "SGP") %>% select(seoIdentifier,selections.label,american) %>%
rename(namePlayer = seoIdentifier,label = selections.label,odds = american)
dk_firstqpts <- dk_firstqpts %>%
mutate(label = ifelse(label == "3+",2.5,ifelse(label == "4+",3.5,ifelse(label == "5+",4.5,
ifelse(label == "6+",5.5,ifelse(label == "7+",6.5,
ifelse(label == "8+",7.5,ifelse(label == "9+",8.5,ifelse(label == "9+",8.5,ifelse(label == "10+",9.5,label))))))))))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label"))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(namePlayer == "Bam Adebayo")
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7)
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = 100/abs(odds/100))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = 100/abs(odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = 100/abs(as.integer(odds)))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = 100/abs(as.double(odds)))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = 100/abs(as.double(odds)/100))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(abs(as.double(odds)))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = abs(as.double(odds)))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = abs(as.integer(odds)))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = as.numeric(odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = as.numeric(gsub(",","",odds)))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = as.numeric(as.factor(odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = as.numeric(as.factor(odds)))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub(",","",odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub("-","",odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub(",","-",odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub("-","",odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub("-", "",odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub("-", "",df_firstqpts$odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub("-", "",dk_firstqpts$odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub("-", "",odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub("-"," ",odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub("- ","",odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub("--","",odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub("-","",odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub("-3","",odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub("-","",odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub("-","" ,odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub("-",NA,odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub('-',"",odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub('-',"",odds, fixed = TRUE))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub('-.*',"",odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = gsub('-.*', "",odds))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = str_remove(odds,"-"))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = str_remove(odds,"-.+"))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = str_remove(odds,"-_"))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = str_remove(odds,"--"))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = str_remove(odds,"."))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = as.numeric(str_remove(odds,".")))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = 100/as.numeric(str_remove(odds,".")))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.7) %>% mutate(winnings = 100/(as.numeric(str_remove(odds,"."))/100))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>% filter(test >=0.6) %>% mutate(winnings = 100/(as.numeric(str_remove(odds,"."))/100))
json_file <- "https://sportsbook-nash.draftkings.com/api/sportscontent/dkusil/v1/leagues/42648/categories/583/subcategories/9976"
json_data <- fromJSON(txt=json_file)
dk_ptreb <- json_data[5]
dk_ptreb <- as.data.frame(dk_ptreb)
dk_ptreb <- unnest(dk_ptreb)
dk_ptreb <- dk_ptreb %>% filter(selections.tags == "MainPointLine") %>% select(seoIdentifier,selections.label,american,selections.points) %>%
rename(namePlayer = seoIdentifier,label = selections.label,odds = american,OU = selections.points) %>% pivot_wider(names_from = label, values_from = odds)
df_ptreb
dk_ptreb
json_file <- "https://sportsbook-nash.draftkings.com/api/sportscontent/dkusil/v1/leagues/42648/categories/583/subcategories/9974"
json_data <- fromJSON(txt=json_file)
dk_astreb  <- json_data[5]
dk_astreb <- as.data.frame(dk_astreb)
dk_astreb <- unnest(dk_astreb)
dk_astreb <- dk_astreb %>% filter(selections.tags == "MainPointLine") %>% select(seoIdentifier,selections.label,american,selections.points) %>%
rename(namePlayer = seoIdentifier,label = selections.label,odds = american,OU = selections.points) %>% pivot_wider(names_from = label, values_from = odds)
dk_astreb
ast_reb <- lapply(next_team_batch$idPlayer, function(x){
slug_team <- all_rosters %>% filter(idPlayer == x) %>% pull(slugTeam)
hit_rate <- seq(5.5,25.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(ast_reb = ast+treb) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,ast_reb)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(ast_reb > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test), .groups = 'drop') %>%
ungroup() %>% mutate(slugTeam = slug_team)
})
hit_rate_above
})
ast_reb <- bind_rows(ast_reb) %>% unnest(cols = everything())
ast_reb
ast_reb %>% left_join(dk_astreb, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test)
ast_reb %>% left_join(dk_astreb, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% arrange(season_hit)
ast_reb %>% left_join(dk_astreb, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% arrange(desc(season_hit))
ast_reb %>% left_join(dk_astreb, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% arrange(season_hit)
json_file <- "https://sportsbook-nash.draftkings.com/api/sportscontent/dkusil/v1/leagues/42648/categories/1293/subcategories/13781"
json_data <- fromJSON(txt=json_file)
dk_stlblk  <- json_data[5]
dk_stlblk <- as.data.frame(dk_stlblk)
dk_stlblk <- unnest(dk_stlblk)
dk_stlblk <- dk_stlblk %>% filter(selections.tags == "MainPointLine") %>% select(seoIdentifier,selections.label,american,selections.points) %>%
rename(namePlayer = seoIdentifier,label = selections.label,odds = american,OU = selections.points) %>% pivot_wider(names_from = label, values_from = odds)
dk_stlblk
##Steals + Blocks
stl_blk <- lapply(next_team_batch$idPlayer, function(x){
slug_team <- all_rosters %>% filter(idPlayer == x) %>% pull(slugTeam)
hit_rate <- seq(0.5,7.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(stl_blk = stl+blk) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,stl_blk)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(stl_blk > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test), .groups = 'drop') %>%
ungroup() %>% mutate(slugTeam = slug_team)
})
hit_rate_above
})
stl_blk <- bind_rows(stl_blk) %>% unnest(cols = everything())
stl_blk
stl_blk %>% left_join(dk_stlblk, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test)
json_file <- "https://sportsbook-nash.draftkings.com/api/sportscontent/dkusil/v1/leagues/42648/categories/1218/subcategories/12497"
json_data <- fromJSON(txt=json_file)
dk_fg3m  <- json_data[5]
dk_fg3m <- as.data.frame(dk_fg3m)
dk_fg3m <- unnest(dk_fg3m)
dk_fg3m <- dk_fg3m %>% filter(selections.tags == "MainPointLine") %>% select(seoIdentifier,selections.label,american,selections.points) %>%
rename(namePlayer = seoIdentifier,label = selections.label,odds = american,OU = selections.points) %>% pivot_wider(names_from = label, values_from = odds)
df_fg3m
dk_fg3m
fg3m <- lapply(next_team_batch$idPlayer, function(x){
slug_team <- all_rosters %>% filter(idPlayer == x) %>% pull(slugTeam)
hit_rate <- seq(0.5,6.5,1)
df <- playerdata %>% filter(idPlayer == x, typeSeason == "Regular Season", slugSeason == "2024-25") %>%
mutate(pts_reb_ast = pts+treb+ast) %>% select(namePlayer,idPlayer,slugTeam,dateGame,locationGame,fg3m)
hit_rate_above <- lapply(hit_rate, function(x){
df %>% mutate(test = mean(fg3m > x), OU = x) %>% group_by(namePlayer, idPlayer, slugTeam, OU) %>% summarize(test = min(test), .groups = 'drop') %>%
ungroup() %>% mutate(slugTeam = slug_team)
})
hit_rate_above
})
fg3m <- bind_rows(fg3m) %>% unnest(cols = everything())
fg3m %>% left_join(dk_fg3m, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test)
fg3m %>% left_join(dk_fg3m, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% arrange(desc(season_hit))
fg3m %>% left_join(dk_fg3m, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% arrange((season_hit))
fg3m %>% left_join(dk_fg3m, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% arrange((OU))
fg3m %>% left_join(dk_fg3m, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% arrange(desc(OU))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label"))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>%
filter(test >=0.6) %>% mutate(winnings = 100/(as.numeric(str_remove(odds,"."))/100))
dk_firstqpts %>% left_join(firstqpoints %>% rename(label = OU) %>% mutate(label = as.character(label)), by = c("namePlayer","label")) %>%
filter(test >=0.7) %>% mutate(winnings = 100/(as.numeric(str_remove(odds,"."))/100))
playerdata %>% filter(str_detect(namePlayer,"Caleb Martin"))
playerdata %>% filter(str_detect(namePlayer,"Caleb Martin")) %>% select(idPlayer)
rosters <- read.csv("rosters.csv")
rosters_id <- rosters %>% filter(Include == "Y") %>% pull(idPlayer)
rosters_names <- rosters %>% filter(Include == "Y") %>% pull(namePlayer)
rosters_teams <- rosters %>% filter(Include == "Y") %>% pull(idTeam)
all_players <- as.data.frame(players) %>% rename(namePlayer = players) %>%
left_join(playerdata %>% filter(slugSeason == current_season) %>% group_by(namePlayer,idPlayer,slugTeam) %>% summarize(n = n()), by = "namePlayer") %>%
select(namePlayer,idPlayer,n) %>% ungroup()
all_players
rosters <- read.csv("rosters.csv")
rosters_id <- rosters %>% filter(Include == "Y") %>% pull(idPlayer)
rosters_names <- rosters %>% filter(Include == "Y") %>% pull(namePlayer)
rosters_teams <- rosters %>% filter(Include == "Y") %>% pull(idTeam)
##Date used for schedule
scheduleDate <- "2024-10-01"
#Season Identifier
current_season <- "2024-25"
last_season <- "2023-24"
season_current <- 2025
season_previous <- 2024
Sys.setenv("VROOM_CONNECTION_SIZE" = 131072 * 2)
gamedata <- game_logs(seasons = season_previous, result_types = "team", season_types = c("Regular Season","Playoffs"))
gamedata_current <- game_logs(seasons = season_current, result_types = "team", season_types = c("Regular Season"))
gamedata <- bind_rows(gamedata,gamedata_current)
all_rosters <- seasons_rosters(seasons = season_current, return_message = FALSE)
playerdata <- game_logs(seasons = season_previous:season_current, result_types = "player", season_types = c("Regular Season"))
playerdata_playoffs <- game_logs(seasons = season_previous, result_types = "player", season_types = c("Playoffs"))
playerdata <- bind_rows(playerdata, playerdata_playoffs)
player_name <- function(x){
playerdata %>% filter(idPlayer == x) %>%
select(dateGame, idGame, slugOpponent, idPlayer, namePlayer, fgm,fga,pts,treb,ast,stl,blk,fg3m,fg3a,tov,
plusminus,minutes,locationGame, countDaysRestPlayer, isB2B, isB2BFirst, isB2BSecond) %>% group_by(namePlayer) %>% summarize(n = n()) %>% pull(namePlayer)
}
player_name <- lapply(rosters_id,player_name)
players <- player_name
players <- unlist(players)
all_players <- as.data.frame(players) %>% rename(namePlayer = players) %>%
left_join(playerdata %>% filter(slugSeason == current_season) %>% group_by(namePlayer,idPlayer,slugTeam) %>% summarize(n = n()), by = "namePlayer") %>%
select(namePlayer,idPlayer,n) %>% ungroup()
all_players
foreach(i = all_players_previous_batch$namePlayer[128],
j = all_players_previous_batch$idPlayer[128]) %do% {
rmarkdown::render(input = 'C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/ML_Parlay_TBRv15_2025.Rmd',
output_file = paste0(j,substr(j,start = 1,stop=3),".html"),
output_dir = file.path('C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/sheets'),
params = list(id = j))
}
foreach(i = all_players$namePlayer[128],
j = all_players$idPlayer[128]) %do% {
rmarkdown::render(input = 'C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/ML_Parlay_TBRv15_2025.Rmd',
output_file = paste0(j,substr(j,start = 1,stop=3),".html"),
output_dir = file.path('C:/Users/CECRAIG/Desktop/Backironanalytics/my-site-test/sheets'),
params = list(id = j))
}
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test)
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% mutate(ident = ifelse(Type == "Regular Season" & season_hit <=0.5,"Y","N"))
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% mutate(ident = ifelse(Type == "Regular Season" & (season_hit >=0.5 OR season_hit <0.6,"Y","N"))
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% mutate(ident = ifelse(Type == "Regular Season" & (season_hit >=0.5 OR season_hit <0.6),"Y","N"))
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% mutate(ident = ifelse(Type == "Regular Season" & (season_hit >=0.5 | season_hit <0.6),"Y","N"))
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% mutate(ident = ifelse(Type == "Regular Season" & (season_hit >=0.5 & season_hit <0.6),"Y","N"))
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% mutate(ident = ifelse(Type == "Regular Season" & (season_hit >=0.5 | season_hit <0.6),"Y","N"))
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% mutate(ident = ifelse(Type == "Regular Season" & season_hit >=0.5,"Y","N"))
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% mutate(ident = ifelse(Type == "Regular Season" & between(season_hit,0.5,0.6),"Y","N"))
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% mutate(ident = ifelse(Type == "Regular Season" & between(season_hit,0.5,0.6),"Y","N")) %>% filter(ident != "Y")
ptreb_ast_df %>% left_join(dk_ptrebast, by = c("namePlayer","OU")) %>% filter(!is.na(Over)) %>% rename(season_hit = test) %>% mutate(ident = ifelse(Type == "Regular Season" & between(season_hit,0.4,0.7),"Y","N")) %>% filter(ident != "Y")
